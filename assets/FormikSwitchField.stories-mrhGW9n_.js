import{j as e,u as d}from"./index-m5U6F7Ob.js";import"./dialog-zzI5LdUx.js";import{u as v,F as a,a as l,c as y,f as T}from"./index.esm-eeZohqdo.js";import{B as r}from"./Button-DCGP40d8.js";import{S as g}from"./Switch-BYV7-zDb.js";import"./index.es-CkFyLYyK.js";import"./index-DX8Gr0Te.js";import"./bundle-mjs-yGZq-iow.js";import"./button-CM-nPdzJ.js";import"./index-BDlMJJRO.js";import"./index-C7T2qPzI.js";import"./utils-cO6xwhGT.js";import"./index-B8qhK8lp.js";import"./index-DW48STyt.js";import"./index-b47sWtkS.js";import"./index-BzN9XAc_.js";import"./index-mpVqtuQx.js";import"./index-BvDQencu.js";import"./index-ChnD7V2m.js";import"./index-gAvDv5fb.js";import"./FormLabel-BthfbRmz.js";import"./Label-rVWsRc_L.js";import"./index-R03QEcsv.js";import"./Tooltip-BDUAN_0g.js";import"./tooltip-BPiumCuS.js";import"./index-DZgzLO07.js";import"./index-Bn24k_br.js";import"./index-Bql9oAji.js";import"./index-DVH7hsL3.js";import"./index-D3K0E4vJ.js";import"./index-BHe78kEM.js";import"./index-B8Y79O9e.js";function s({id:i,name:t,data:h,disabled:m=!1,error:u,hideError:w=!1,label:p,labelLeft:x,size:j="md",required:b=!1,tooltip:f,className:k}){const[S,n,c]=v(t);return e.jsx(g,{id:i,required:b,checked:S.value,onCheckedChange:async N=>{await c.setValue(N),await c.setTouched(!0)},data:h,disabled:m,label:p,labelLeft:x,tooltip:f,size:j,error:n.error&&n.touched?n.error:u,hideError:w,className:k})}const re=()=>e.jsx(a,{initialValues:{switch:!1},isInitialValid:!1,onSubmit:i=>{alert(`Switch value:  ${i.switch}`)},children:({values:i})=>e.jsx("div",{children:e.jsxs(l,{children:[e.jsx(s,{name:"switch",label:i.switch?"Checked":"Unchecked"}),e.jsx(r,{className:{root:"mt-2"},type:"submit",children:"Submit"})]})})}),ne=()=>e.jsx(a,{initialValues:{switch:!1},isInitialValid:!1,onSubmit:i=>{alert(`Switch value:  ${i.switch}`)},children:({values:i})=>e.jsx("div",{children:e.jsxs(l,{children:[e.jsx(s,{required:!0,name:"switch",label:i.switch?"Checked":"Unchecked"}),e.jsx(r,{className:{root:"mt-2"},type:"submit",children:"Submit"})]})})}),ce=()=>e.jsx(a,{initialValues:{switch:!1},isInitialValid:!1,onSubmit:i=>{alert(`Switch value:  ${i.switch}`)},children:({values:i})=>e.jsx("div",{children:e.jsxs(l,{children:[e.jsx(s,{name:"switch",label:i.switch?"Checked":"Unchecked",tooltip:"This is a tooltip"}),e.jsx(s,{name:"switch",label:i.switch?"Checked":"Unchecked",tooltip:"This is a tooltip",error:"Error message"}),e.jsx(r,{className:{root:"mt-2"},type:"submit",children:"Submit"})]})})}),oe=()=>e.jsx(a,{initialValues:{switch:!1},isInitialValid:!1,onSubmit:i=>{alert(`Switch value:  ${i.switch}`)},children:({values:i})=>e.jsx("div",{children:e.jsxs(l,{className:"flex flex-col gap-5",children:[e.jsx(s,{labelLeft:!0,name:"switch",label:i.switch?"Checked":"Unchecked",tooltip:"This is a tooltip"}),e.jsx(s,{labelLeft:!0,name:"switch",label:i.switch?"Checked":"Unchecked",tooltip:"This is a tooltip",error:"Error message"}),e.jsx(r,{className:{root:"mt-2"},type:"submit",children:"Submit"})]})})}),de=()=>e.jsx(a,{initialValues:{switch:!1},isInitialValid:!1,onSubmit:i=>{alert(`Switch value:  ${i.switch}`)},children:({values:i})=>e.jsx("div",{children:e.jsxs(l,{children:[e.jsx(s,{required:!0,name:"switch",label:i.switch?"Checked":"Unchecked",error:"This field is required"}),e.jsx(r,{className:{root:"mt-2"},type:"submit",children:"Submit"})]})})}),he=()=>e.jsx(a,{initialValues:{switch:void 0},isInitialValid:!1,onSubmit:i=>{alert(`Switch value:  ${i.switch}`)},children:({values:i})=>e.jsx("div",{children:e.jsxs(l,{children:[e.jsx(s,{required:!0,name:"switch",label:i.switch?"Checked":"Unchecked"}),e.jsx(r,{className:{root:"mt-2"},type:"submit",children:"Submit"})]})})}),me=()=>e.jsx(a,{initialValues:{switch:!1},isInitialValid:!1,onSubmit:i=>{alert(`Switch value:  ${i.switch}`)},children:({values:i})=>e.jsx("div",{children:e.jsxs(l,{children:[e.jsx(s,{disabled:!0,required:!0,name:"switch",label:i.switch?"Checked":"Unchecked"}),e.jsx(r,{className:{root:"mt-2"},type:"submit",children:"Submit"})]})})}),ue=()=>e.jsx(a,{initialValues:{switch:!1},isInitialValid:!1,onSubmit:i=>{alert(`Switch value:  ${i.switch}`)},children:({values:i})=>e.jsxs(l,{className:"flex flex-col gap-2",children:[e.jsx(s,{name:"switch",label:i.switch?"Checked":"Unchecked",size:"sm"}),e.jsx(s,{name:"switch",label:i.switch?"Checked":"Unchecked",size:"md"}),e.jsx(s,{name:"switch",label:i.switch?"Checked":"Unchecked",size:"lg"}),e.jsx(r,{className:{root:"mt-2 w-max"},type:"submit",children:"Submit"})]})}),we=()=>e.jsx("div",{children:e.jsx(a,{initialValues:{switch:!1},isInitialValid:!1,onSubmit:i=>{alert(`Switch value:  ${i.switch}`)},validationSchema:y().shape({switch:T().required("Required").equals([!0],"Must be checked")}),children:({values:i,isValid:t})=>e.jsxs("div",{children:[e.jsx("div",{children:"This switch is validated to be true and displayes an error otherwise (as soon as the field was touched)"}),e.jsxs(l,{children:[e.jsx(s,{name:"switch",label:i.switch?"Checked":"Unchecked",tooltip:"Switch Field Tooltip",required:!0}),e.jsx(r,{disabled:!t,className:{root:"mt-2"},type:"submit",children:"Submit"})]})]})})});function o(i){const t={code:"code",li:"li",p:"p",ul:"ul",...d(),...i.components};return e.jsxs(e.Fragment,{children:[`
`,e.jsxs("div",{className:"prose prose-sm max-w-none",children:[e.jsxs(t.p,{className:"ladle-markdown",children:["The ",e.jsx(t.code,{className:"ladle-markdown",children:"FormikSwitchField"})," component is a Formik wrapper around the ",e.jsx(t.code,{className:"ladle-markdown",children:"SwitchField"})," component. In addition to labels, tooltips, etc. it also offers direct interfaces for form validation, error messages, and form submission handling."]}),e.jsx(t.p,{className:"ladle-markdown",children:"The FormikSwitchField accepts the following props:"}),e.jsxs(t.ul,{className:"ladle-markdown",children:[`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param id - The id of the switch."}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param name - The name of the field. This is used to identify the field in Formik."}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param data - The object of data attributes that can be used for testing (e.g. data-test or data-cy)"}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param label - The label that is displayed next to the switch."}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param labelLeft - Indicator whether the label should be displayed on the left or right side of the switch."}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param disabled - Indicator whether the switch is disabled or not."}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param error - The error message that is shown below the switch."}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param hideError - Indicator whether the error message is displayed or not."}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param size - The size of the switch. The size can be small, medium or large."}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param tooltip - The tooltip that is displayed when hovering over the label. Tooltips are only available with the standardLabel setting."}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param required - Indicator whether the field is required or not. This is only available with the standardLabel setting."}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param className - The optional className object allows you to override the default styling."}),`
`]})]}),`
`,`
`]})}function V(i={}){const{wrapper:t}={...d(),...i.components};return t?e.jsx(t,{...i,children:e.jsx(o,{...i})}):o(i)}V.storyName="Readme";typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{re as Default,me as Disabled,de as Error,oe as LeftLabel,V as MDXContent,ne as Required,ue as Sizes,ce as Tooltip,he as Undefined,we as Validation};
