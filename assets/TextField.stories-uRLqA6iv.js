import{R as o,j as e,u as r}from"./index-RY1cFico.js";import"./dialog-DlLYfIg7.js";import{b as d}from"./index-D9GdmwpL.js";import{D as n}from"./index-B8qhK8lp.js";import{T as t}from"./TextField-BtPt_tS0.js";import"./index.es-DB-NlCku.js";import"./index-BUFVoi7r.js";import"./bundle-mjs-yGZq-iow.js";import"./FormLabel-Bd-v1GVO.js";import"./Label-fzSC_0Hq.js";import"./index-ChGmPpTV.js";import"./index-BCY8BAM6.js";import"./index-COlRHQWm.js";import"./Tooltip-BKSvDrVc.js";import"./tooltip-P4POJdJ3.js";import"./index-DW48STyt.js";import"./index-DqeliON2.js";import"./index-D3sxzi2G.js";import"./index-DNSnLeX1.js";import"./index-CJEMn_Ed.js";import"./index-cx2pNrrS.js";import"./index-CMvd07-5.js";import"./index-BH6MgBZx.js";import"./index-Be3hZevT.js";import"./index-WRgjPrBt.js";import"./index-nXe4MyYv.js";import"./index-CHI67jPF.js";import"./utils-CwMhw_Ky.js";import"./input-BsbANQWT.js";const X=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The default TextField"}),e.jsx(t,{label:"Label",tooltip:"Tooltip for this input",className:{field:"mb-1 w-80"},placeholder:"Placeholder",value:a,onChange:l})]})},_=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The default TextField"}),e.jsx(t,{label:"Label",tooltip:"Tooltip for this input",className:{field:"mb-1 w-80"},placeholder:"Placeholder",value:a,onChange:l,icon:n,onIconClick:()=>alert("Icon clicked")})]})},B=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The default TextField"}),e.jsx(t,{label:"Label",tooltip:"Tooltip for this input",className:{field:"mb-1 w-80"},placeholder:"Placeholder",value:a,onChange:l,icon:d,iconPosition:"right",onIconClick:()=>alert("Icon clicked")})]})},G=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The TextField with a small label"}),e.jsx(t,{label:"Label",labelType:"small",tooltip:"Tooltip for this input",className:{field:"mb-1"},placeholder:"Placeholder",value:a,onChange:l}),e.jsx(t,{label:"Search",labelType:"small",tooltip:"Tooltip for this input",className:{field:"mb-1"},placeholder:"Placeholder",value:a,onChange:l,icon:n}),e.jsx(t,{required:!0,label:"Label 3",labelType:"small",tooltip:"Tooltip for this input",className:{field:"mb-1"},placeholder:"Placeholder",value:a,onChange:l})]})},K=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The TextField can be disabled"}),e.jsx(t,{disabled:!0,label:"Label",tooltip:"Tooltip for this input",className:{field:"mb-1"},placeholder:"Placeholder",value:a,onChange:l})]})},O=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The TextField can be disabled"}),e.jsx(t,{isTouched:!0,label:"Label",tooltip:"Tooltip for this input",error:"This is an error message",className:{field:"mb-1"},placeholder:"Placeholder",value:a,onChange:l})]})},$=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"By adding a required attribute, the label of the field changes it appearance"}),e.jsx(t,{required:!0,label:"Label",tooltip:"Tooltip for this input",className:{field:"mb-1"},placeholder:"Placeholder",value:a,onChange:l})]})},H=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The default TextField can be customized and icons from FontAwesome can be included at the beginning of the field"}),e.jsx(t,{label:"Label",tooltip:"Tooltip for this input",className:{field:"mb-1 w-1/2",label:"text-red-500",input:"bg-blue-100",error:"text-red-700"},placeholder:"Placeholder",value:a,onChange:l,icon:n})]})},J=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The default TextField can be customized and icons from FontAwesome can be included at the beginning of the field"}),e.jsx(t,{label:"Label",tooltip:"Tooltip for this input",placeholder:"Placeholder",value:a,onChange:l,icon:n,onEnter:i=>{i.stopPropagation(),i.preventDefault(),alert(`Enter pressed with value: ${a}`)}})]})};function s(a){const l={li:"li",p:"p",ul:"ul",...r(),...a.components};return e.jsxs(e.Fragment,{children:[`
`,e.jsxs("div",{className:"prose prose-sm max-w-none",children:[e.jsx(l.p,{className:"ladle-markdown",children:"The TextField component is an input field that only accepts numerical values. Optionally, it is possible to define labels, units, tooltips, a rounding precision and error messages."}),e.jsx(l.p,{className:"ladle-markdown",children:"The props for the TextField component are as follows:"}),e.jsxs(l.ul,{className:"ladle-markdown",children:[`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param id - The id of the input field."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param data - The object of data attributes that can be used for testing (e.g. data-test or data-cy)"}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param name - The name of the input field."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param field - The field object from formik."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param value - The value of the input field (external state management)."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param onChange - The onChange function of the input field (external state management)."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param label - The text displayed as label."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param labelType - The optional labelType can be used to change the size and position of the label according to pre-defined standards."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param placeholder - The placeholder text for the input field."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param tooltip - The optional tooltip is shown on hover over the tooltip next to the label."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param required - Indicate whether the field is required or not."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param isTouched - Indicate whether the field has been touched or not (validation is not handled by this component)."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param hideError - Indicate whether the error message should be hidden or not."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param error - The error message that is shown below the field."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param disabled - Indicate whether the field is disabled or not."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param onPaste - The optional onPaste function is called when the user pastes text into the input field."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param className - The optional className object allows you to override the default styling."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param icon - The optional icon is shown on the right side of the input field."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param iconPosition - The optional iconPosition can be used to change the position of the icon to the left side of the input field."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param onIconClick - The optional onIconClick function is called when the icon is clicked."}),`
`]})]}),`
`,`
`]})}function c(a={}){const{wrapper:l}={...r(),...a.components};return l?e.jsx(l,{...a,children:e.jsx(s,{...a})}):s(a)}c.storyName="Readme";typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{X as Default,K as Disabled,J as EnterKeyConfirmation,O as Error,_ as Icon,B as IconRight,c as MDXContent,$ as Required,G as SmallLabel,H as Styled};
