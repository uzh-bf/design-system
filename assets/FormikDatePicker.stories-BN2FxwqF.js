import{j as e,u as m}from"./index-BqTx-QX7.js";import"./dialog-zgwNaEJf.js";import{u as S,F as r,a as i,c as D,d as F}from"./index.esm-CbcrZXJ7.js";import{B as s}from"./Button-BnjFx81R.js";import{D as V}from"./DatePicker-ZKE31gZm.js";import"./index.es-CQ9gUiBL.js";import"./index-eS_ahLXK.js";import"./bundle-mjs-yGZq-iow.js";import"./button-DK0Q7yNO.js";import"./index-G7BINlf6.js";import"./index-Co8mANBL.js";import"./utils-BwEq4KUS.js";import"./index-D9GdmwpL.js";import"./index-B8qhK8lp.js";import"./dayjs.min-BCgzZU6z.js";import"./FormLabel-CItd06mF.js";import"./Label-31GFuBzx.js";import"./index-DjvPX9QL.js";import"./index-CG7PjHhg.js";import"./Tooltip-C0lal5mf.js";import"./tooltip-B5EjV4eV.js";import"./index-DW48STyt.js";import"./index-CxNXpvul.js";import"./index-UhYmvs0a.js";import"./index-C4MpRS3O.js";import"./index-y_Y8gC8d.js";import"./index-jbN9Sx1X.js";import"./index-DuitujIa.js";import"./index-Bup10qWE.js";import"./index-DsYSSo7O.js";import"./index-B5aOgEK3.js";import"./index-CpKgzUMn.js";import"./index-Dikp2s6L.js";import"./calendar-CKUtB_iK.js";import"./chevron-left-0DP-SWAy.js";import"./createLucideIcon-CtmBUFyO.js";import"./chevron-right-DHtoptRg.js";import"./chevron-down-Bhd2K7_R.js";import"./popover-Ce7pw_FM.js";import"./index-Cxy-du3Z.js";function n({id:t,name:a,label:c="",labelType:h="small",placeholder:p,tooltip:u,required:x=!1,disabled:j=!1,hideError:b=!1,className:f,dataTrigger:w,dataCalendar:g,dataNextMonth:y,dataPreviousMonth:k,...N}){const[v,l,o]=S(a);return e.jsx(V,{id:t,date:v.value,onDateChange:async T=>{await o.setValue(T),await o.setTouched(!0)},label:c,labelType:h,placeholder:p,tooltip:u,required:x,disabled:j,error:l.error,hideError:b,isTouched:l.touched,className:f,dataTrigger:w,dataCalendar:g,dataNextMonth:y,dataPreviousMonth:k,...N})}const be=()=>e.jsx("div",{children:e.jsx(r,{initialValues:{date:new Date("2025-01-01")},onSubmit:async(t,{resetForm:a})=>{alert(`Form submitted with date: ${t.date}`),a()},children:({values:t})=>e.jsxs("div",{children:[e.jsxs(i,{children:[e.jsx(n,{name:"date",className:{trigger:"mb-2"},dataTrigger:{cy:"trigger-cy"},dataCalendar:{cy:"calendar-cy"},dataNextMonth:{cy:"next-month-cy"},dataPreviousMonth:{cy:"previous-month-cy"}}),e.jsx(s,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.date.toISOString()]})]})})}),fe=()=>e.jsx("div",{children:e.jsx(r,{initialValues:{date:new Date("2025-01-01")},onSubmit:async(t,{resetForm:a})=>{alert(`Form submitted with date: ${t.date}`),a()},children:({values:t})=>e.jsxs("div",{children:[e.jsxs(i,{children:[e.jsx(n,{name:"date",className:{trigger:"mb-2"},disabled:!0}),e.jsx(s,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.date.toISOString()]})]})})}),we=()=>e.jsx("div",{children:e.jsx(r,{initialValues:{date:new Date("2025-01-01")},onSubmit:async(t,{resetForm:a})=>{alert(`Form submitted with date: ${t.date}`),a()},children:({values:t})=>e.jsxs("div",{children:[e.jsxs(i,{children:[e.jsx(n,{name:"date",className:{trigger:"mb-2"},label:"Label"}),e.jsx(s,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.date.toISOString()]})]})})}),ge=()=>e.jsx("div",{children:e.jsx(r,{initialValues:{date:new Date("2025-01-01")},onSubmit:async(t,{resetForm:a})=>{alert(`Form submitted with date: ${t.date}`),a()},children:({values:t})=>e.jsxs("div",{children:[e.jsxs(i,{children:[e.jsx(n,{name:"date",className:{trigger:"mb-2"},label:"Testlabel",required:!0,tooltip:"Test Tooltip"}),e.jsx(s,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.date.toISOString()]})]})})}),ye=()=>e.jsxs("div",{children:[e.jsx("div",{children:"The date has to be chosen to be after 2020 - otherwise the component displays an error."}),e.jsx(r,{initialValues:{date:new Date("2020-01-01")},onSubmit:async(t,{resetForm:a})=>{alert(`Form submitted with date: ${t.date}`),a()},validationSchema:D().shape({date:F().min("2020-01-01","Date has to be after 2020")}),children:({values:t,isValid:a})=>e.jsxs("div",{children:[e.jsxs(i,{children:[String(a),e.jsx(n,{required:!0,name:"date",className:{trigger:"mb-2"},label:"Testlabel",tooltip:"Test Tooltip"}),e.jsx(s,{type:"submit",disabled:!a,children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.date.toISOString()]})]})})]});function d(t){const a={code:"code",li:"li",p:"p",ul:"ul",...m(),...t.components};return e.jsxs(e.Fragment,{children:[`
`,e.jsxs("div",{className:"prose prose-sm max-w-none",children:[e.jsxs(a.p,{className:"ladle-markdown",children:["The ",e.jsx(a.code,{className:"ladle-markdown",children:"FormikDatePicker"})," component is a Formik wrapper around the ",e.jsx(a.code,{className:"ladle-markdown",children:"DatePicker"})," component. In addition to labels, tooltips, etc. it also offers direct interfaces for form validation, error messages, and form submission handling."]}),e.jsx(a.p,{className:"ladle-markdown",children:"The FormikDatePicker accepts the following props:"}),e.jsxs(a.ul,{className:"ladle-markdown",children:[`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param id - The id of the date changer"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param name - The name of the field as used to keep track of the state in Formik."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param label - The label of the date changer"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param labelType - The type of the label (small or large)"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param placeholder - The placeholder of the date changer (is only shown if no date is selected)"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param tooltip - The tooltip of the date changer (is only shown if a label is given)"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param required - Whether the date label should contain a required symbol"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param disabled - Whether the date changer is disabled or not"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param hideError - Whether the error message should be hidden"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param format - The format of the date when the edit mode is not active (then the display is up to the browser implementation)"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param className - The optional className object allows you to override the default styling."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param onDateChange - The function to be called when the date is changed (state management)"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param dataTrigger - The object of data attributes that can be used for testing (e.g. data-test or data-cy) for the popover trigger"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param dataCalendar - The object of data attributes that can be used for testing (e.g. data-test or data-cy) for the calendar"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param dataNextMonth - The object of data attributes that can be used for testing (e.g. data-test or data-cy) for the next month button"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param dataPreviousMonth - The object of data attributes that can be used for testing (e.g. data-test or data-cy) for the previous month button"}),`
`]})]}),`
`,`
`]})}function M(t={}){const{wrapper:a}={...m(),...t.components};return a?e.jsx(a,{...t,children:e.jsx(d,{...t})}):d(t)}M.storyName="Readme";typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{be as Default,fe as Disabled,we as Labelled,M as MDXContent,ge as Tooltip,ye as Validation};
