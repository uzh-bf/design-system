import{j as e}from"./index-yul23q5F.js";import{u as q,F as l,a,c as N,e as D}from"./index.esm-D2JOuryq.js";import{B as s}from"./Button-BWG8gcnn.js";import{t as S}from"./bundle-mjs-BkWO730n.js";import{N as g}from"./NumberField-6JZl-nMq.js";import"./index.es-vptG3G_8.js";import"./index-BpbS97pL.js";import"./button-BCl3OIM5.js";import"./index-CFPbB5i3.js";import"./index-Bb4qSo10.js";import"./utils-C1IuoEY4.js";import"./index-n6cSTtfq.js";import"./FormLabel-BLYJxqiP.js";import"./Label-DnmhO-a9.js";import"./index-DAnT_t34.js";import"./index-CL9guOYZ.js";import"./Tooltip-C3G37nL5.js";import"./tooltip-Bib2GGoh.js";import"./index-BinFU0Xs.js";import"./index-DokqJSNs.js";import"./index-B4AjdbYI.js";import"./index-C8wPj0Wr.js";import"./index-uBlwf6K1.js";import"./floating-ui.react-dom-B0Qb7xIR.js";import"./index-BLYo9adA.js";import"./index-CIfJaB9F.js";import"./index-CZb-xRV6.js";import"./input-QNKU4Tni.js";function r({id:i,name:t,value:T,onChange:k,label:m,labelType:h="small",placeholder:u,precision:c,min:p,max:b,unit:x,tooltip:j,required:v,hideError:f,error:I,isTouched:L,disabled:w,onBlur:d,data:V,className:n,...F}){const[$,y,o]=q(t||"");return t?e.jsx("div",{className:S("w-full",n==null?void 0:n.root),children:e.jsx(g,{id:i,value:$.value,onChange:async P=>await o.setValue(P),label:m,labelType:h,placeholder:u,precision:c,min:p,max:b,unit:x,tooltip:j,required:v,hideError:f,error:y.error,isTouched:y.touched,disabled:w,onBlur:()=>{o.setTouched(!0),d==null||d()},data:V,className:n,...F})}):e.jsx("div",{className:S("w-full",n==null?void 0:n.root),children:e.jsx(g,{id:i,value:T,onChange:k,label:m,labelType:h,placeholder:u,precision:c,min:p,max:b,unit:x,tooltip:j,required:v,hideError:f,error:I,isTouched:L,disabled:w,onBlur:()=>{o.setTouched(!0),d==null||d()},data:V,className:n,...F})})}const oe=()=>e.jsxs("div",{children:[e.jsx("div",{children:'The default Formik field works with a "name" input'}),e.jsx(l,{initialValues:{name:""},isInitialValid:!1,onSubmit:async(i,{resetForm:t})=>{alert(`Form submitted with value: ${i.name}`),t()},children:({values:i})=>e.jsxs("div",{children:[e.jsxs(a,{children:[e.jsx(r,{name:"name",label:"Label",tooltip:"Tooltip for this input",className:{root:"mb-1 w-80"},placeholder:"Placeholder"}),e.jsx(s,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",i.name]})]})})]}),me=()=>e.jsxs("div",{children:[e.jsx("div",{children:"The formik number field supports the same attributes as the standard number field (including e.g. units)"}),e.jsx(l,{initialValues:{name:""},isInitialValid:!1,onSubmit:async(i,{resetForm:t})=>{alert(`Form submitted with value: ${i.name}`),t()},children:({values:i})=>e.jsxs("div",{children:[e.jsxs(a,{children:[e.jsx(r,{name:"name",label:"Label",tooltip:"Tooltip for this input",unit:"kg",className:{root:"mb-1 w-80"},placeholder:"Placeholder"}),e.jsx(s,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",i.name]})]})})]}),he=()=>e.jsxs("div",{children:[e.jsx("div",{children:"Specifying minimum and maximum values will enable additional validation steps. In this case, values between 0 and 1000 will be accepted"}),e.jsx(l,{initialValues:{name:void 0},isInitialValid:!1,onSubmit:async(i,{resetForm:t})=>{alert(`Form submitted with value: ${i.name}`),t()},children:({values:i})=>e.jsxs("div",{children:[e.jsxs(a,{children:[e.jsx(r,{name:"name",label:"Label",tooltip:"Tooltip for this input",className:{root:"mb-1"},placeholder:"Placeholder",min:0,max:1e3}),e.jsx(s,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",i.name]})]})})]}),ue=()=>e.jsxs("div",{children:[e.jsx("div",{children:"Number inputs can also be disabled with a corresponding prop, not allowing the user to make changes to the field."}),e.jsx(l,{initialValues:{name:""},isInitialValid:!1,onSubmit:async(i,{resetForm:t})=>{alert(`Form submitted with value: ${i.name}`),t()},children:({values:i})=>e.jsxs("div",{children:[e.jsxs(a,{children:[e.jsx(r,{disabled:!0,name:"name",label:"Label",tooltip:"Tooltip for disabled field",className:{root:"mb-1"},placeholder:"Placeholder (disabled field)"}),e.jsx(s,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",i.name]})]})})]}),ce=()=>e.jsxs("div",{children:[e.jsx("div",{children:"This formik field has validation functionalities included. The value is required and should be at least 100."}),e.jsx(l,{initialValues:{name:""},isInitialValid:!1,onSubmit:async(i,{resetForm:t})=>{alert(`Form submitted with value: ${parseFloat(i.name||"")}`),t()},validationSchema:N().shape({name:D().required("This field is required.").min(100)}),children:({values:i})=>e.jsxs("div",{children:[e.jsxs(a,{children:[e.jsx(r,{name:"name",label:"Label",tooltip:"Tooltip for this input",className:{root:"mb-1"},placeholder:"Placeholder"}),e.jsx(s,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value that will be submitted with parseFloat():"," ",parseFloat(i.name||"")]})]})})]}),pe=()=>e.jsxs("div",{children:[e.jsx("div",{children:'The default Formik field works with a "name" input and allows the user to input decimal numbers as well as integers. The number of decimal places can be specified through the precision prop (set to 2 for this example).'}),e.jsx(l,{initialValues:{name:""},isInitialValid:!1,onSubmit:async(i,{resetForm:t})=>{alert(`Form submitted with value: ${parseFloat(i.name||"")}`),t()},children:({values:i})=>e.jsxs("div",{children:[e.jsxs(a,{children:[e.jsx(r,{name:"name",label:"Label",tooltip:"Tooltip for this input",className:{root:"mb-1"},placeholder:"Placeholder",precision:2}),e.jsx(s,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value that will be submitted with parseFloat():"," ",parseFloat(i.name||"")]})]})})]}),be=()=>e.jsxs("div",{children:[e.jsx("div",{children:"By fixing the precision parameter to 0, the user can only input integers."}),e.jsx(l,{initialValues:{name:""},isInitialValid:!1,onSubmit:async(i,{resetForm:t})=>{alert(`Form submitted with value: ${parseFloat(i.name||"")}`),t()},children:({values:i})=>e.jsxs("div",{children:[e.jsxs(a,{children:[e.jsx(r,{name:"name",label:"Label",tooltip:"Tooltip for this input",className:{root:"mb-1"},placeholder:"Placeholder",precision:0}),e.jsx(s,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value that will be submitted with parseFloat():"," ",parseFloat(i.name||"")]})]})})]}),xe=()=>e.jsxs("div",{children:[e.jsx("div",{children:"By adding a required attribute, the label of the field changes it appearance"}),e.jsx(l,{initialValues:{name:""},isInitialValid:!1,onSubmit:async(i,{resetForm:t})=>{alert(`Form submitted with value: ${i.name}`),t()},children:({values:i})=>e.jsxs("div",{children:[e.jsxs(a,{children:[e.jsx(r,{required:!0,name:"name",label:"Label",tooltip:"Tooltip for this input",className:{root:"mb-1"},placeholder:"Placeholder"}),e.jsx(s,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",i.name]})]})})]}),je=()=>e.jsxs("div",{children:[e.jsx("div",{children:'The default Formik field works with a "name" input'}),e.jsx(l,{initialValues:{name:""},isInitialValid:!1,onSubmit:async(i,{resetForm:t})=>{alert(`Form submitted with value: ${i.name}`),t()},children:({values:i})=>e.jsxs("div",{children:[e.jsxs(a,{children:[e.jsx(r,{name:"name",label:"Label",tooltip:"Tooltip for this input",className:{root:"mb-1 w-1/2",label:"text-red-500",error:"text-red-700",input:"bg-uzh-blue-20"},placeholder:"Placeholder"}),e.jsx(s,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",i.name]})]})})]}),ve=()=>e.jsxs("div",{children:[e.jsx("div",{children:"Formik text area component with a large label"}),e.jsx(l,{initialValues:{name:""},isInitialValid:!1,onSubmit:async(i,{resetForm:t})=>{alert(`Form submitted with value: ${i.name}`),t()},children:({values:i})=>e.jsxs("div",{children:[e.jsxs(a,{children:[e.jsx(r,{required:!0,name:"name",label:"Label",labelType:"large",className:{root:"mb-1"},placeholder:"Placeholder"}),e.jsx(s,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",i.name]})]})})]});typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{pe as Decimals,oe as Default,ue as Disabled,be as Integer,ve as LargeLabel,he as MinMax,xe as Required,je as Styled,me as Unit,ce as Validation};
