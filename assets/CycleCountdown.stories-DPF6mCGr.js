import{r as d,j as e}from"./index-eP5EzB1W.js";import{d as w}from"./dayjs.min-uxsYXPVO.js";import{C as g}from"./Countdown-BTd07iD2.js";import{C as A}from"./CycleProgress-BjpDLC4m.js";import"./index--Vu1sBTO.js";import"./bundle-mjs-BkWO730n.js";function r({expiresAt:t,totalDuration:o,size:s="md",overrideSize:i,color:l="#00A321",strokeWidthRem:S=.35,isStatic:f,terminalColor:h="#8B0000",terminalPercentage:c,formatter:j,onExpire:u,onUpdate:a,data:D,className:n}){const[m,p]=d.useState(o!==0?w(t).diff(w(),"second")/o*100:0);return e.jsx(A,{size:s,overrideSize:i,percentage:c&&m===0?c:m,color:c&&m===0?h:l,strokeWidthRem:S,data:D,className:{root:n==null?void 0:n.root,children:n==null?void 0:n.countdownWrapper},children:e.jsx(g,{isStatic:f,expiresAt:t,formatter:j,onExpire:()=>{u==null||u(),p(0)},onUpdate:x=>{a==null||a(x),p(o!==0?x/o*100:0)},className:{root:n==null?void 0:n.countdown}})})}const k=()=>{const t=new Date;return t.setSeconds(t.getSeconds()+10),e.jsx(r,{expiresAt:t,totalDuration:10})},R=()=>{const t=new Date;return t.setSeconds(t.getSeconds()+10),e.jsx(r,{expiresAt:t,totalDuration:10,isStatic:!0})},W=()=>{const t=new Date;return t.setSeconds(t.getSeconds()+10),e.jsx(r,{expiresAt:t,totalDuration:10,size:"sm",strokeWidthRem:.2})},z=()=>{const t=new Date;return t.setSeconds(t.getSeconds()+10),e.jsx(r,{expiresAt:t,totalDuration:10,formatter:o=>`${o} s`})},M=()=>{const[t,o]=d.useState(!1),s=new Date;return s.setSeconds(s.getSeconds()+10),e.jsxs("div",{children:[e.jsx(r,{expiresAt:s,totalDuration:10,onExpire:()=>{o(!0)}}),"onExpire function executed: ",t?"yes":"no"]})},T=()=>{const t=d.useMemo(()=>{const i=new Date;return i.setSeconds(i.getSeconds()+10),i},[]),[o,s]=d.useState(0);return e.jsxs("div",{children:["This countdown uses the onUpdate function to update a state value. Note that we need to use a useMemo hook for the memoization of the time variable, otherwise the countdown will be re-rendered every second. Also, the time will not be updated on expiration and will therefore stay at 1 in the end.",e.jsx(r,{expiresAt:t,totalDuration:10,onUpdate:i=>{s(i)}}),"Updated value: ",o]})},B=()=>{const t=new Date;return t.setSeconds(t.getSeconds()+10),e.jsx(r,{expiresAt:t,totalDuration:10,color:"#FF0000",strokeWidthRem:.6,className:{root:"bg-blue-300",countdown:"font-bold"}})},P=()=>{const t=new Date;return t.setSeconds(t.getSeconds()+10),e.jsx(r,{expiresAt:t,totalDuration:10,terminalColor:"#FF0000",terminalPercentage:100})};typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{k as Default,M as Expiration,z as Formatter,W as Small,R as Static,B as Styled,P as TerminalSettings,T as Updating};
