import{j as e,r as i,u as r}from"./index-CXlL8g0Z.js";import"./dialog-8tfCghpp.js";import{f as t,a as c,b as d}from"./index-B8qhK8lp.js";import{B as n}from"./Button-DBOaWe40.js";import"./index.es-Vm4fTsgJ.js";import"./index-DbSqGH23.js";import"./bundle-mjs-yGZq-iow.js";import"./button-BgCMnNI0.js";import"./index-Caer1RqO.js";import"./index-CDqdB-Xg.js";import"./utils-BV0Uo5nF.js";const y=()=>e.jsxs(n,{children:[e.jsx(n.Icon,{icon:t}),e.jsx(n.Label,{children:"Button"})]}),v=()=>e.jsx(n,{children:e.jsx(n.Icon,{icon:t,withoutLabel:!0})}),I=()=>e.jsxs(n,{primary:!0,children:[e.jsx(n.Icon,{icon:t}),e.jsx(n.Label,{children:"Button"})]}),B=()=>e.jsxs(n,{destructive:!0,children:[e.jsx(n.Icon,{icon:t}),e.jsx(n.Label,{children:"Button"})]}),L=()=>{const[s,a]=i.useState(!1),l=()=>{a(!0),setTimeout(()=>{a(!1)},3e3)};return e.jsxs("div",{className:"flex flex-col gap-4",children:[e.jsx(n,{loading:!0,className:{root:"w-max"},children:"Button"}),e.jsxs("div",{className:"flex flex-col gap-2",children:[e.jsx("div",{children:"For Buttons with an icon, the loading parameter can optionally also be passed to the icon, causing it to be hidden when the loading spinner is shown:"}),e.jsxs(n,{loading:s,onClick:l,disabled:s,className:{root:"w-max"},children:[e.jsx(n.Icon,{icon:t,loading:s}),e.jsx(n.Label,{children:"Button with Icon"})]}),e.jsxs(n,{primary:!0,loading:s,onClick:l,disabled:s,className:{root:"w-max"},children:[e.jsx(n.Icon,{icon:t,loading:s}),e.jsx(n.Label,{children:"Button with Icon"})]}),e.jsxs(n,{destructive:!0,loading:s,onClick:l,disabled:s,className:{root:"w-max"},children:[e.jsx(n.Icon,{icon:t,loading:s}),e.jsx(n.Label,{children:"Button with Icon"})]})]})]})},C=()=>e.jsxs("div",{className:"flex flex-col gap-4",children:[e.jsxs(n,{active:!0,className:{root:"w-max"},children:[e.jsx(n.Icon,{icon:t}),e.jsx(n.Label,{children:"Button"})]}),e.jsxs(n,{active:!0,className:{root:"w-max",active:"bg-red-300 hover:bg-red-400 hover:text-black"},children:[e.jsx(n.Icon,{icon:t}),e.jsx(n.Label,{children:"Custom Active Style"})]})]}),T=()=>e.jsxs("div",{className:"flex flex-col gap-4",children:[e.jsxs(n,{disabled:!0,children:[e.jsx(n.Icon,{icon:t}),e.jsx(n.Label,{children:"Button"})]}),e.jsxs(n,{primary:!0,disabled:!0,children:[e.jsx(n.Icon,{icon:t}),e.jsx(n.Label,{children:"Primary Button"})]}),e.jsxs(n,{destructive:!0,disabled:!0,children:[e.jsx(n.Icon,{icon:t}),e.jsx(n.Label,{children:"Destructive Button"})]})]}),D=()=>e.jsxs(n,{fluid:!0,children:[e.jsx(n.Icon,{icon:t}),e.jsx(n.Label,{children:"Button"})]}),F=()=>e.jsxs(n,{basic:!0,children:[e.jsx(n.Icon,{icon:t}),e.jsx(n.Label,{children:"Button"})]}),A=()=>e.jsx(n,{className:{root:"h-8 w-8 rounded-full bg-red-300 hover:bg-red-500"},onClick:()=>alert("Red button was pressed!")}),S=()=>{const[s,a]=i.useState(void 0);return e.jsxs(n.IconGroup,{state:s,setState:a,children:[e.jsx(n.Icon,{icon:c,withoutLabel:!0}),e.jsx(n.Icon,{icon:d,withoutLabel:!0}),e.jsx(n.Icon,{icon:t,withoutLabel:!0})]})};function o(s){const a={code:"code",li:"li",p:"p",ul:"ul",...r(),...s.components};return e.jsxs(e.Fragment,{children:[`
`,e.jsxs("div",{className:"prose prose-sm max-w-none",children:[e.jsxs(a.p,{className:"ladle-markdown",children:["The ",e.jsx(a.code,{className:"ladle-markdown",children:"Button"})," component is a versatile, feature-rich button implementation that supports multiple visual states, loading indicators, icons, and grouped button functionality. It provides a comprehensive set of options for creating interactive elements across your application."]}),e.jsx(a.p,{className:"ladle-markdown",children:"Use this component when you need:"}),e.jsxs(a.ul,{className:"ladle-markdown",children:[`
`,e.jsx(a.li,{className:"ladle-markdown",children:"Primary actions (submit forms, save changes)"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"Secondary actions (cancel, reset)"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"Destructive actions (delete, remove)"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"Icon-only buttons for compact interfaces"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"Button groups for related actions"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"Loading states during async operations"}),`
`]}),e.jsx(a.p,{className:"ladle-markdown",children:"The component includes three subcomponents:"}),e.jsxs(a.ul,{className:"ladle-markdown",children:[`
`,e.jsxs(a.li,{className:"ladle-markdown",children:[e.jsx(a.code,{className:"ladle-markdown",children:"Button.Icon"}),": For adding FontAwesome icons with proper spacing"]}),`
`,e.jsxs(a.li,{className:"ladle-markdown",children:[e.jsx(a.code,{className:"ladle-markdown",children:"Button.Label"}),": For button text content with consistent styling"]}),`
`,e.jsxs(a.li,{className:"ladle-markdown",children:[e.jsx(a.code,{className:"ladle-markdown",children:"Button.IconGroup"}),": For creating segmented button groups with active states"]}),`
`]}),e.jsx(a.p,{className:"ladle-markdown",children:"Key features include automatic loading spinners, fluid width options, active state styling, and comprehensive disabled state handling."}),e.jsx(a.p,{className:"ladle-markdown",children:"The props for the Button component are as follows:"}),e.jsxs(a.ul,{className:"ladle-markdown",children:[`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param id - The id of the button."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param children - The content of the button."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param onClick - Function that is applied when the button is clicked."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param disabled - Indicate whether the button is disabled or not. Conditional styling is applied, if this is true."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param destructive - Indicate whether the button is destructive or not. Conditional styling is applied, if this is true."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param primary - Indicate whether the button is primary or not. Conditional styling is applied, if this is true."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param active - Indicate whether the button is active or not. Conditional styling is applied, if this is true."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param fluid - Indicate whether the button should be fluid or not. Conditional styling is applied, if this is true."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param basic - This attribute allows to directly remove significant pre-styling and only applies basic styles and functionally required attributes."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param loading - Indicate whether the button is loading or not. Conditional styling / loading symbol is applied, if this is true."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param type - The html type of the button."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param className - The optional className object allows you to override the default styling."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param data - The object of data attributes that can be used for testing (e.g. data-test or data-cy)"}),`
`]}),e.jsx(a.p,{className:"ladle-markdown",children:"The props for the integrated Icon subcomponent (Button.Icon) are as follows:"}),e.jsxs(a.ul,{className:"ladle-markdown",children:[`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param icon - The icon definition from FontAwesome."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param withoutLabel - Conditionally, specific styling is not applied to the button that would be required for spacing between icon and label."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param loading - Conditionally, the icon can be hidden if a loading spinner is shown instead to keep the width of the button as consistent as possible."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param className - The optional className object allows you to override the default styling of the icon."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@returns Icon component for use inside the Button component"}),`
`]}),e.jsx(a.p,{className:"ladle-markdown",children:"The props for the integrated Label subcomponent (Button.Label) are as follows:"}),e.jsxs(a.ul,{className:"ladle-markdown",children:[`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param className - The optional className object allows you to override the default styling of the label."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param children - The content of the label."}),`
`]}),e.jsx(a.p,{className:"ladle-markdown",children:"The props for the integrated Button Icon Group subcomponent (Button.IconGroup) are as follows:"}),e.jsxs(a.ul,{className:"ladle-markdown",children:[`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param state - The current state (number) of the button group, indicating which button is active (= index)."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param setState - React state setter function to update the active button index."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param className - The optional className object allows you to override the default styling of the button group and its children."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param children - An array of React nodes that will be rendered as buttons within the group."}),`
`]})]}),`
`,`
`]})}function m(s={}){const{wrapper:a}={...r(),...s.components};return a?e.jsx(a,{...s,children:e.jsx(o,{...s})}):o(s)}m.storyName="Readme";typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{C as Active,F as BasicButton,S as ButtonIconGroup,A as ColorButton,y as Default,B as Destructive,T as Disabled,D as Fluid,v as Icon,L as Loading,m as MDXContent,I as Primary};
