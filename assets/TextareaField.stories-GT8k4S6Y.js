import{R as o,j as e,u as i}from"./index-m5U6F7Ob.js";import"./dialog-zzI5LdUx.js";import{D as r}from"./index-B8qhK8lp.js";import{T as t}from"./TextareaField-Kd8BDxZr.js";import"./index.es-CkFyLYyK.js";import"./index-DX8Gr0Te.js";import"./bundle-mjs-yGZq-iow.js";import"./FormLabel-BthfbRmz.js";import"./Label-rVWsRc_L.js";import"./index-R03QEcsv.js";import"./index-gAvDv5fb.js";import"./index-BDlMJJRO.js";import"./Tooltip-BDUAN_0g.js";import"./tooltip-BPiumCuS.js";import"./index-DW48STyt.js";import"./index-b47sWtkS.js";import"./index-DZgzLO07.js";import"./index-Bn24k_br.js";import"./index-Bql9oAji.js";import"./index-mpVqtuQx.js";import"./index-DVH7hsL3.js";import"./index-ChnD7V2m.js";import"./index-D3K0E4vJ.js";import"./index-BHe78kEM.js";import"./index-BzN9XAc_.js";import"./index-B8Y79O9e.js";import"./utils-cO6xwhGT.js";const R=()=>{const[l,a]=o.useState("");return e.jsxs("div",{children:[e.jsx("div",{children:"The default TextareaField"}),e.jsx(t,{label:"Label",tooltip:"Tooltip for this input",placeholder:"Placeholder",value:l,onChange:a,className:{root:"w-120"}})]})},E=()=>{const[l,a]=o.useState("");return e.jsxs("div",{children:[e.jsx("div",{children:"This TextareaField has an additional maximum length prop and shows a corresponding message at the bottom."}),e.jsx(t,{label:"Label",tooltip:"Tooltip for this input",placeholder:"Placeholder",value:l,onChange:a,maxLength:30,className:{root:"mb-8"}}),e.jsx(t,{label:"Label",tooltip:"Tooltip for this input",placeholder:"Placeholder",value:l,onChange:a,maxLength:30,maxLengthUnit:"characters",className:{root:"mb-8"}}),e.jsx(t,{label:"Label",tooltip:"Tooltip for this input",placeholder:"Placeholder",value:l,onChange:a,maxLength:30,hideMaxLength:!0,className:{root:"mb-8"}}),e.jsx(t,{label:"Label",labelType:"small",tooltip:"Tooltip for this input",placeholder:"Placeholder",value:l,onChange:a,maxLength:30,maxLengthUnit:"characters",className:{root:"mb-8"}})]})},z=()=>{const[l,a]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The TextareaField with a small label"}),e.jsx(t,{label:"Label",labelType:"small",tooltip:"Tooltip for this input",className:{field:"mb-1"},placeholder:"Placeholder",value:l,onChange:a}),e.jsx(t,{label:"Search",labelType:"small",tooltip:"Tooltip for this input",className:{field:"mb-1"},placeholder:"Placeholder",value:l,onChange:a,icon:r}),e.jsx(t,{required:!0,label:"Label 3",labelType:"small",tooltip:"Tooltip for this input",className:{field:"mb-1"},placeholder:"Placeholder",value:l,onChange:a})]})},U=()=>{const[l,a]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The TextareaField can be disabled"}),e.jsx(t,{disabled:!0,label:"Label",tooltip:"Tooltip for this input",className:{field:"mb-1"},placeholder:"Placeholder",value:l,onChange:a})]})},X=()=>{const[l,a]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"By adding a required attribute, the label of the field changes it appearance"}),e.jsx(t,{required:!0,label:"Label",tooltip:"Tooltip for this input",className:{field:"mb-1"},placeholder:"Placeholder",value:l,onChange:a})]})},A=()=>{const[l,a]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The default TextareaField can be customized and icons from FontAwesome can be included at the beginning of the field"}),e.jsx(t,{label:"Label",tooltip:"Tooltip for this input",className:{field:"mb-1 w-1/2",label:"text-red-500",input:"bg-blue-100",error:"text-red-700"},placeholder:"Placeholder",value:l,onChange:a,icon:r})]})};function n(l){const a={li:"li",p:"p",ul:"ul",...i(),...l.components};return e.jsxs(e.Fragment,{children:[`
`,e.jsxs("div",{className:"prose prose-sm max-w-none",children:[e.jsx(a.p,{className:"ladle-markdown",children:"The TextareaField component is an input field that only accepts numerical values. Optionally, it is possible to define labels, units, tooltips, a rounding precision and error messages."}),e.jsx(a.p,{className:"ladle-markdown",children:"The props for the TextareaField component are as follows:"}),e.jsxs(a.ul,{className:"ladle-markdown",children:[`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param id - The id of the input field."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param data - The object of data attributes that can be used for testing (e.g. data-test or data-cy)"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param name - The name of the input field."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param field - The field object from formik."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param value - The value of the input field (external state management)."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param onChange - The onChange function of the input field (external state management)."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param label - The text displayed as label."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param labelType - The optional labelType can be used to change the size and position of the label according to pre-defined standards."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param placeholder - The placeholder text for the input field."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param tooltip - The optional tooltip is shown on hover over the tooltip next to the label."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param maxLength - The optional maxLength is used to limit the number of characters that can be entered in the field."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:'@param maxLengthUnit - This optional label allows to specify a custom label for the maxLength indicator (e.g. "characters left" supporting internationalization).'}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param hideMaxLength - Indicate whether the maxLength indicator should be hidden or not."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param required - Indicate whether the field is required or not."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param isTouched - Indicate whether the field has been touched or not (validation is not handled by this component)."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param hideError - Indicate whether the error message should be hidden or not."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param error - The error message that is shown below the field."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param disabled - Indicate whether the field is disabled or not."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param className - The optional className object allows you to override the default styling."}),`
`]})]}),`
`,`
`]})}function s(l={}){const{wrapper:a}={...i(),...l.components};return a?e.jsx(a,{...l,children:e.jsx(n,{...l})}):n(l)}s.storyName="Readme";typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{R as Default,U as Disabled,s as MDXContent,E as MaxLength,X as Required,z as SmallLabel,A as Styled};
