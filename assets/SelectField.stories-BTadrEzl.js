import{r as n,j as a,u as m}from"./index-BafhfaWL.js";import"./dialog-zrzL8Q2n.js";import{f as o,g as s}from"./values-CKgGisIZ.js";import{S as r}from"./SelectField-BHhxuFdI.js";import"./index-B8qhK8lp.js";import"./index.es-CbdGHMTn.js";import"./index-DD_ElSN_.js";import"./bundle-mjs-yGZq-iow.js";import"./FormLabel-DU8topoI.js";import"./Label-D95-wRoK.js";import"./index-Cf8h7r9h.js";import"./index-By6iy7L5.js";import"./index-Bdk5mZKy.js";import"./Tooltip-C_UwhkRl.js";import"./tooltip-JdqaGybV.js";import"./index-DW48STyt.js";import"./index-Bjvh1mUJ.js";import"./index-Bdo5CA3A.js";import"./index-Bu6fKwi7.js";import"./index-DZiCtgRu.js";import"./index-BoEL3cKs.js";import"./index-C5ftyyM2.js";import"./index-DnAJKN3u.js";import"./index-BatggfZm.js";import"./index-DvcoJ9WS.js";import"./index-CPQ7wqAA.js";import"./index-BGBq2KUN.js";import"./utils-DC0B8pc6.js";import"./Select-7FJFtusQ.js";import"./select-CdG5ogKH.js";import"./index-BdQq_4o_.js";import"./index-CgrCrE07.js";import"./index-B6Xam7i0.js";import"./index-BhQ_mKtd.js";import"./index-DMtW8IFa.js";import"./chevron-down-DtH41901.js";import"./createLucideIcon-BAgWgKPU.js";import"./check-DRqpllGh.js";const Q=()=>{const[l,e]=n.useState(o[0].value);return a.jsx(r,{items:o,value:l,onChange:t=>{alert(`Value changed to: ${t}`),e(t)}})},U=()=>{const[l,e]=n.useState(s[0].items[0].value);return a.jsx(r,{groups:s,value:l,onChange:t=>{alert(`Value changed to: ${t}`),e(t)}})},W=()=>{const[l,e]=n.useState(o[0].value);return a.jsx(r,{required:!0,label:"Label",items:o,value:l,onChange:t=>{alert(`Value changed to: ${t}`),e(t)}})},Y=()=>{const[l,e]=n.useState(o[0].value);return a.jsx(r,{disabled:!0,items:o,value:l,onChange:t=>{alert(`Value changed to: ${t}`),e(t)}})},Z=()=>{const[l,e]=n.useState(o[0].value);return a.jsx(r,{label:"Label",items:o,value:l,onChange:t=>{alert(`Value changed to: ${t}`),e(t)}})},ee=()=>{const[l,e]=n.useState(o[0].value);return a.jsx(r,{label:"Label",labelType:"large",items:o,value:l,onChange:t=>{alert(`Value changed to: ${t}`),e(t)}})},ae=()=>{const[l,e]=n.useState(o[0].value);return a.jsxs("div",{className:"flex flex-col gap-4",children:[a.jsx(r,{required:!0,label:"Label",error:"Error message",items:o,value:l,onChange:t=>{alert(`Value changed to: ${t}`),e(t)}}),a.jsx(r,{required:!0,label:"Label",labelType:"large",error:"Error message",items:o,value:l,onChange:t=>{alert(`Value changed to: ${t}`),e(t)}})]})},te=()=>{const[l,e]=n.useState(o[0].value);return a.jsxs("div",{className:"flex flex-col gap-4",children:[a.jsx(r,{required:!0,label:"Label",tooltip:"Tooltip for this input",items:o,value:l,onChange:t=>{alert(`Value changed to: ${t}`),e(t)}}),a.jsx(r,{required:!0,label:"Label",labelType:"large",tooltip:"Tooltip for this input",items:o,value:l,onChange:t=>{alert(`Value changed to: ${t}`),e(t)}}),a.jsx(r,{required:!0,label:"Label",labelType:"large",tooltip:"Tooltip for this input",error:"Error message",items:o,value:l,onChange:t=>{alert(`Value changed to: ${t}`),e(t)}})]})};function i(l){const e={li:"li",p:"p",ul:"ul",...m(),...l.components};return a.jsxs(a.Fragment,{children:[`
`,a.jsxs("div",{className:"prose prose-sm max-w-none",children:[a.jsx(e.p,{className:"ladle-markdown",children:"The SelectField component is an input field that only accepts numerical values. Optionally, it is possible to define labels, units, tooltips, a rounding precision and error messages."}),a.jsx(e.p,{className:"ladle-markdown",children:"The props for the SelectField component are as follows:"}),a.jsxs(e.ul,{className:"ladle-markdown",children:[`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param id - The id of the field."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param data - The object of data attributes that can be used for testing (e.g. data-test or data-cy)"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param name - The name of the field."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param items - The array of items that should be available on the select component."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param groups - The optional groups array can be used to group items in the select component."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param value - The value of the field (external state management)."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param onChange - The onChange function of the field (external state management)."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param onBlur - The onBlur function of the field (external state management)."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param label - The optional label is shown next to the field in the form."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param labelType - The optional labelType can be used to change the size and position of the label according to pre-defined standards."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param placeholder - The optional placeholder is shown when no value is selected / initialization with 'undefined' is chosen."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param disabled - The optional disabled prop disables the select component."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param error - The optional error message is shown next to the component."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param hideError - Hide the error message below this component as is might be more appropriate to show it somewhere else."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param contentPosition - The position of the content of the select component. Currently only 'item-aligned' and 'popper' are supported."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param tooltip - The optional tooltip is shown on hover next to the label."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param required - Indicate whether the field is required or not."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param className - The optional className object allows you to override the default styling."}),`
`]})]}),`
`,`
`]})}function d(l={}){const{wrapper:e}={...m(),...l.components};return e?a.jsx(e,{...l,children:a.jsx(i,{...l})}):i(l)}d.storyName="Readme";typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{Q as Default,Y as Disabled,ae as Error,U as Groups,Z as Label,ee as LargeLabel,d as MDXContent,W as Required,te as Tooltip};
