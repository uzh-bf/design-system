import{j as e,u as o}from"./index-RY1cFico.js";import"./dialog-DlLYfIg7.js";import{U as n}from"./UserNotification-CuTFmSZC.js";import"./index-B8qhK8lp.js";import"./index.es-DB-NlCku.js";import"./index-BUFVoi7r.js";import"./bundle-mjs-yGZq-iow.js";const u=()=>e.jsx(n,{message:"This is the default notif style when the provided type is not 'success', 'error', or 'info'"}),f=()=>e.jsx(n,{type:"success",message:"You have been registered successfully",children:"Content"}),x=()=>e.jsx(n,{type:"warning",message:"You are about to create a new account with a different email address.",children:"Content"}),y=()=>e.jsx(n,{type:"error",message:"An error occurred during registration",children:"Content"}),g=()=>e.jsx(n,{type:"info",message:"There are five more places available",children:"Content"}),w=()=>e.jsxs("div",{children:[e.jsx("div",{children:"It is also possible to only provide children to the notification component, if not message text is available or if the content has to be passed as a React node."}),e.jsx(n,{type:"info",children:e.jsxs("div",{children:[e.jsx("strong",{children:"This content is passed as a separate node"}),e.jsx("div",{children:"Contains multiple lines"})]})})]}),j=()=>e.jsx(n,{type:"default",message:"This is a notification with default type but added custom styling",className:{root:"gap-4 text-lg",content:"text-base text-red-400 italic",icon:"text-blue-500",message:"text-green-500"},children:"The content of the notification can be styled as well and used to display more detailed information regarding the notification."});function a(s){const t={code:"code",li:"li",p:"p",ul:"ul",...o(),...s.components};return e.jsxs(e.Fragment,{children:[`
`,e.jsxs("div",{className:"prose prose-sm max-w-none",children:[e.jsxs(t.p,{className:"ladle-markdown",children:["The ",e.jsx(t.code,{className:"ladle-markdown",children:"UserNotification"})," component provides contextual feedback to users through styled notification messages with appropriate icons and color-coded styling. It supports different notification types for various user interaction scenarios."]}),e.jsx(t.p,{className:"ladle-markdown",children:"Use this component when you need to:"}),e.jsxs(t.ul,{className:"ladle-markdown",children:[`
`,e.jsx(t.li,{className:"ladle-markdown",children:"Display success, error, warning, or informational messages to users"}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"Provide feedback after user actions (form submission, data changes, etc.)"}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"Show system status updates or alerts"}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"Present contextual information with appropriate visual styling"}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"Create consistent notification experiences across your application"}),`
`]}),e.jsx(t.p,{className:"ladle-markdown",children:"The component automatically applies appropriate icons and styling based on the notification type, supports both message text and custom React content, and provides comprehensive styling customization options."}),e.jsx(t.p,{className:"ladle-markdown",children:"The UserNotification component accepts the following props:"}),e.jsxs(t.ul,{className:"ladle-markdown",children:[`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param id - The id of the notification."}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param data - The object of data attributes that can be used for testing (e.g. data-test or data-cy)"}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param message - The message that is displayed in the notification."}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param type - The type of the notification. This can be either 'success', 'info' or 'error'. This determines the icon that is displayed and some conditional styling. If not type is provided, the information icon is displayed."}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param children - The optional children are displayed in the notification in addition to the provided message icon."}),`
`,e.jsx(t.li,{className:"ladle-markdown",children:"@param className - The optional className object allows you to override the default styling."}),`
`]})]}),`
`,`
`]})}function i(s={}){const{wrapper:t}={...o(),...s.components};return t?e.jsx(t,{...s,children:e.jsx(a,{...s})}):a(s)}i.storyName="Readme";typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{w as CustomContent,u as Default,y as Error,g as Info,i as MDXContent,j as Styled,f as Success,x as Warning};
