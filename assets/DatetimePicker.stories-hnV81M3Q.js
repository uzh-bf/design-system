import{r as l,j as e,u as i}from"./index-CcDGD-g4.js";import"./dialog-DOGqFU5g.js";import{D as r}from"./DatetimePicker-rGNsbaaD.js";import"./index-D9GdmwpL.js";import"./index-B8qhK8lp.js";import"./index.es-B4uptDD4.js";import"./index-D6ON6ON-.js";import"./dayjs.min-Dvycg22W.js";import"./bundle-mjs-yGZq-iow.js";import"./FormLabel-Ba3HUIhg.js";import"./Label-BWf8Z5U-.js";import"./index-C_VsosSU.js";import"./index-BO8L9HOM.js";import"./index-CDn9kirM.js";import"./Tooltip-DGLDip1T.js";import"./tooltip-CbkzcOzB.js";import"./index-DW48STyt.js";import"./index-BRayYSAr.js";import"./index-CRqjwpMj.js";import"./index-DBBPpsgf.js";import"./index-CjCNOY7Z.js";import"./index-C8DVCQNw.js";import"./index-BN5iYgvt.js";import"./index-DmKes-9c.js";import"./index-BAkwFBXs.js";import"./index-BE9Z6zS2.js";import"./index-D3qD3OMD.js";import"./index-C535Z2Km.js";import"./utils-F6L8f0Cv.js";import"./button-6EbpHnoK.js";import"./index-CcgWXPIG.js";import"./calendar-DJxTBlhk.js";import"./chevron-left-gpxzuHI1.js";import"./createLucideIcon-D75-KEpm.js";import"./chevron-right-xTjo7gCf.js";import"./chevron-down-B8ffO2WN.js";import"./input-Ci9GPZbw.js";import"./popover-9z6Om5zv.js";import"./index-ChFpx-A-.js";import"./select-Dgk1vI82.js";import"./index-BdQq_4o_.js";import"./index-C2RDy6R1.js";import"./index-BkAEeQ0n.js";import"./index-B2h-H-rN.js";import"./check-i4OV7FDx.js";const ae=()=>{const t=new Date;t.setHours(13,14,0,0);const[a,n]=l.useState(void 0);return e.jsxs("div",{className:"mb-8",children:[e.jsx("div",{children:"Default Component"}),e.jsx(r,{value:a,defaultPopupValue:a??t,onChange:n})]})},te=()=>{const t=new Date;t.setHours(13,14,0,0);const[a,n]=l.useState(void 0);return e.jsxs("div",{className:"mb-8",children:[e.jsx("div",{children:"Disabled Component"}),e.jsx(r,{disabled:!0,value:a,defaultPopupValue:a??t,onChange:n})]})},le=()=>{const t=new Date;t.setHours(13,14,0,0);const[a,n]=l.useState(void 0);return e.jsxs("div",{className:"mb-8",children:[e.jsx("div",{children:"The date format on the trigger component can be customized, by passing a corresponding formatting string to the dayjs parsing logic"}),e.jsx(r,{value:a,defaultPopupValue:a??t,onChange:n,displayFormat:"MM/DD/YYYY HH:mm"})]})},re=()=>{const[t,a]=l.useState(void 0);return e.jsxs("div",{className:"mb-8",children:[e.jsx("div",{children:"Minute Precision Component"}),e.jsx(r,{value:t,defaultPopupValue:t,onChange:a,granularity:"minute"})]})},ne=()=>{const[t,a]=l.useState(void 0);return e.jsxs("div",{className:"mb-8",children:[e.jsx("div",{children:"Hour Precision Component"}),e.jsx(r,{value:t,defaultPopupValue:t,onChange:a,granularity:"hour"})]})};function se(){const[t,a]=l.useState(new Date("2025-01-01"));return e.jsx(r,{required:!0,value:t,defaultPopupValue:t,onChange:a,className:{trigger:"w-[280px]"},label:"Testlabel",labelType:"large",granularity:"minute"})}function ie(){const[t,a]=l.useState(new Date("2025-01-01"));return e.jsx(r,{required:!0,value:t,defaultPopupValue:t,onChange:a,className:{trigger:"w-[280px]"},label:"Testlabel",labelType:"small",granularity:"minute"})}function oe(){const[t,a]=l.useState(new Date("2025-01-01")),[n,o]=l.useState(new Date("2025-01-01"));return e.jsxs("div",{className:"flex flex-col gap-4",children:[e.jsx(r,{required:!0,isTouched:!0,value:t,defaultPopupValue:t,onChange:a,label:"Testlabel",labelType:"small",tooltip:"Tooltip for date changer with label",error:"This is an error"}),e.jsx(r,{required:!0,isTouched:!0,value:t,defaultPopupValue:n,onChange:o,label:"Testlabel",labelType:"large",tooltip:"Tooltip for date changer with label",error:"This is an error"})]})}function s(t){const a={code:"code",li:"li",p:"p",ul:"ul",...i(),...t.components};return e.jsxs(e.Fragment,{children:[`
`,e.jsxs("div",{className:"prose prose-sm max-w-none",children:[e.jsxs(a.p,{className:"ladle-markdown",children:["The ",e.jsx(a.code,{className:"ladle-markdown",children:"DatetimePicker"})," component provides comprehensive date and time selection in a single interface with extensive customization options. It combines calendar-based date selection with time input controls, offering flexible granularity, formatting, and localization support for complex datetime requirements."]}),e.jsx(a.p,{className:"ladle-markdown",children:"Use this component when you need to:"}),e.jsxs(a.ul,{className:"ladle-markdown",children:[`
`,e.jsx(a.li,{className:"ladle-markdown",children:"Collect both date and time inputs in forms with precise control over granularity"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"Create event scheduling interfaces with flexible time precision requirements"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"Implement appointment booking with customizable display formats and hour cycles"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"Build international applications with locale-specific date and time formatting"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"Provide comprehensive datetime selection with validation and error handling"}),`
`]}),e.jsx(a.p,{className:"ladle-markdown",children:"The component supports combined date and time selection, multiple granularity levels (day, hour, minute, second), 12/24-hour time format options, custom display formatting, locale and internationalization support, and extensive testing attributes for all interactive elements."}),e.jsx(a.p,{className:"ladle-markdown",children:"The props for the DatetimePicker component are as follows:"}),e.jsxs(a.ul,{className:"ladle-markdown",children:[`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param value - The currently selected date value."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param onChange - Callback function called when the date value changes."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param onMonthChange - Callback function called when the displayed month changes."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param disabled - Whether the picker is disabled."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param hourCycle - Whether to use 12-hour or 24-hour time format."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param placeholder - Placeholder text shown when no date is selected / the state is undefined."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param yearRange - The range of years to display in the year dropdown, relative to the current year."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param displayFormat - The dayjs format string to display the date in the input field."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param granularity - The smallest unit displayed by the picker (e.g., 'second', 'minute', 'hour', 'day')."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param className - Optional object to override default styling for trigger, input, label, tooltip, and error."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param defaultPopupValue - The default date and time shown when the calendar popup opens."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param dataTrigger - Data attributes for testing the popover trigger."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param dataCalendar - Data attributes for testing the calendar."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param dataHours - Data attributes for testing the hours input."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param dataMinutes - Data attributes for testing the minutes input."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param dataSeconds - Data attributes for testing the seconds input."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param dataNextMonth - Data attributes for testing the next month button."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param dataPreviousMonth - Data attributes for testing the previous month button."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param error - Error message to display."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param hideError - Whether to hide the error message."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param isTouched - Whether the picker has been interacted with."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param label - The label for the picker."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param labelType - The type of label to display ('small' or 'large')."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param align - The alignment of the label ('start', 'center', or 'end')."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param required - Whether the label should indicate a required field."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param tooltip - Tooltip content shown with the label."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param locale - The locale for date formatting and calendar display."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param weekStartsOn - The day the week starts on in the calendar."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param showWeekNumber - Whether to show the week number in the calendar."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param showOutsideDays - Whether to show days from adjacent months in the calendar."}),`
`]})]}),`
`,`
`]})}function d(t={}){const{wrapper:a}={...i(),...t.components};return a?e.jsx(a,{...t,children:e.jsx(s,{...t})}):s(t)}d.storyName="Readme";typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{le as DateFormat,ae as Default,te as Disabled,oe as Error,ne as HourPrecision,se as Labelled,d as MDXContent,re as MinutePrecision,ie as SmallLabel};
