import{r as l,j as a,u as s}from"./index-CAQKFAxd.js";import"./dialog-DEE8yTJ5.js";import{D as n}from"./DatePicker-DEsoggId.js";import"./index-D9GdmwpL.js";import"./index-B8qhK8lp.js";import"./index.es-Ca_4x9c1.js";import"./index-Bj9VtyUR.js";import"./dayjs.min-CtU1pnOa.js";import"./bundle-mjs-yGZq-iow.js";import"./FormLabel-BJdMgnCN.js";import"./Label-CfsFZsUb.js";import"./index-Cik1wfSP.js";import"./index-pUhsbL-m.js";import"./index-DSwmdgG9.js";import"./Tooltip-DnEIe_q7.js";import"./tooltip-D-SvU-N4.js";import"./index-DW48STyt.js";import"./index-Brkzsael.js";import"./index-CkScAsnq.js";import"./index-C1vvIxVj.js";import"./index-CSt_FIWl.js";import"./index-CY89l7P3.js";import"./index-DQMBrfe7.js";import"./index-Bk8MMo03.js";import"./index-CAA5ihmL.js";import"./index-Dx3EAcJ_.js";import"./index-rJSRKwAv.js";import"./index-B7nyhifm.js";import"./utils-B7u26qNx.js";import"./button-BWNJuQRw.js";import"./index-sFzBzEku.js";import"./calendar-ZDUEZMww.js";import"./chevron-left-C61PiH2u.js";import"./createLucideIcon-CfIJf9yH.js";import"./chevron-right-CY-ARntZ.js";import"./chevron-down-Dbz_kGZ0.js";import"./popover-RtqlO8be.js";import"./index-CQCpmjyj.js";function O(){const[t,e]=l.useState(new Date("2025-01-01"));return a.jsx(n,{date:t,onDateChange:r=>e(r),dataTrigger:{cy:"trigger-cy"},dataCalendar:{cy:"calendar-cy"},dataNextMonth:{cy:"next-month-cy"},dataPreviousMonth:{cy:"previous-month-cy"}})}function Q(){const[t,e]=l.useState(new Date("2025-01-01"));return a.jsx(n,{disabled:!0,date:t,onDateChange:r=>e(r)})}function V(){const[t,e]=l.useState(new Date("2025-01-01"));return a.jsx(n,{required:!0,label:"Testlabel",labelType:"large",date:t,onDateChange:r=>e(r)})}function Y(){const[t,e]=l.useState(new Date("2025-01-01"));return a.jsx(n,{required:!0,label:"Testlabel",labelType:"small",tooltip:"Tooltip for date changer with label",date:t,onDateChange:r=>e(r)})}function Z(){const[t,e]=l.useState(new Date("2025-01-01")),[r,i]=l.useState(new Date("2025-01-01"));return a.jsxs("div",{className:"flex flex-col gap-4",children:[a.jsx(n,{required:!0,isTouched:!0,date:t,onDateChange:e,label:"Testlabel",labelType:"small",tooltip:"Tooltip for date changer with label",error:"This is an error"}),a.jsx(n,{required:!0,isTouched:!0,date:r,onDateChange:i,label:"Testlabel",labelType:"large",tooltip:"Tooltip for date changer with label",error:"This is an error"})]})}function o(t){const e={code:"code",li:"li",p:"p",ul:"ul",...s(),...t.components};return a.jsxs(a.Fragment,{children:[`
`,a.jsxs("div",{className:"prose prose-sm max-w-none",children:[a.jsxs(e.p,{className:"ladle-markdown",children:["The ",a.jsx(e.code,{className:"ladle-markdown",children:"DatePicker"})," component provides an intuitive date selection interface with a calendar popup, form integration, and comprehensive validation support. It offers a user-friendly way to select dates with proper labeling, error handling, and accessibility features."]}),a.jsx(e.p,{className:"ladle-markdown",children:"Use this component when you need to:"}),a.jsxs(e.ul,{className:"ladle-markdown",children:[`
`,a.jsx(e.li,{className:"ladle-markdown",children:"Collect date inputs in forms with integrated validation and error display"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"Provide calendar-based date selection with month/year navigation"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"Create accessible date inputs with proper labeling and required field indicators"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"Implement disabled date selection states for read-only scenarios"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"Build form interfaces with consistent date input styling and behavior"}),`
`]}),a.jsx(e.p,{className:"ladle-markdown",children:"The component supports calendar popup interface, form labels with size variants, error message display with touch state handling, disabled states, comprehensive testing data attributes, and extensive styling customization options."}),a.jsx(e.p,{className:"ladle-markdown",children:"The props for the DatePicker component are as follows:"}),a.jsxs(e.ul,{className:"ladle-markdown",children:[`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param id - The id of the date changer"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param date - The date to be displayed (state)"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param onDateChange - The function to be called when the date is changed (state management)"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param label - The label of the date changer"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param labelType - The type of the label (small or large)"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param align - The alignment of the label (start, center or end)"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param placeholder - The placeholder of the date changer (is only shown if no date is selected)"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param tooltip - The tooltip of the date changer (is only shown if a label is given)"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param required - Whether the date label should contain a required symbol"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param disabled - Whether the date changer is disabled or not"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param error - The error message to be displayed"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param hideError - Whether the error message should be hidden"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param isTouched - Whether the date changer has been touched"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param className - The optional className object allows you to override the default styling."}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param onDateChange - The function to be called when the date is changed (state management)"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param dataTrigger - The object of data attributes that can be used for testing (e.g. data-test or data-cy) for the popover trigger"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param dataCalendar - The object of data attributes that can be used for testing (e.g. data-test or data-cy) for the calendar"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param dataNextMonth - The object of data attributes that can be used for testing (e.g. data-test or data-cy) for the next month button"}),`
`,a.jsx(e.li,{className:"ladle-markdown",children:"@param dataPreviousMonth - The object of data attributes that can be used for testing (e.g. data-test or data-cy) for the previous month button"}),`
`]})]}),`
`,`
`]})}function d(t={}){const{wrapper:e}={...s(),...t.components};return e?a.jsx(e,{...t,children:a.jsx(o,{...t})}):o(t)}d.storyName="Readme";typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{O as Default,Q as Disabled,Z as Error,V as Labelled,d as MDXContent,Y as SmallLabel};
