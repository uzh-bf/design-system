import{j as e,u as t}from"./index-m5U6F7Ob.js";import"./dialog-zzI5LdUx.js";import{C as n}from"./CycleProgress-HZN8cYW9.js";import"./bundle-mjs-yGZq-iow.js";function m(){return e.jsx(n,{percentage:60,children:"60"})}function p(){return e.jsx(n,{percentage:60,size:"sm",strokeWidthRem:.2,children:"60"})}function h(){return e.jsx(n,{percentage:60,color:"#FF0000",children:"60"})}function u(){return e.jsxs("div",{children:["Depending on the type of font that was chosen, it is possible that the text does not appear centered. In this case, it might be necessary to override the size, which is set manually. However, this is explicitely set as an override to only be used when necessary. Whenever an override is used, the className root will probably also have to be adapted accordingly",e.jsx(n,{percentage:60,overrideSize:40,className:{root:"h-20 w-20 text-xl font-bold"},children:"60"})]})}function r(s){const a={code:"code",li:"li",p:"p",ul:"ul",...t(),...s.components};return e.jsxs(e.Fragment,{children:[`
`,e.jsxs("div",{className:"prose prose-sm max-w-none",children:[e.jsxs(a.p,{className:"ladle-markdown",children:["The ",e.jsx(a.code,{className:"ladle-markdown",children:"CycleProgress"})," component provides a circular progress visualization with customizable styling and central content display. It offers a clean, visual way to represent completion percentages, loading states, or progress indicators with flexible sizing and styling options."]}),e.jsx(a.p,{className:"ladle-markdown",children:"Use this component when you need to:"}),e.jsxs(a.ul,{className:"ladle-markdown",children:[`
`,e.jsx(a.li,{className:"ladle-markdown",children:"Display completion percentages in a visually appealing circular format"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"Show progress states for tasks, downloads, or loading operations"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"Create dashboard widgets with progress indicators and central content"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"Implement compact progress displays for limited space interfaces"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"Build status indicators with custom colors and sizes"}),`
`]}),e.jsx(a.p,{className:"ladle-markdown",children:"The component supports multiple size variants, custom colors and stroke widths, central content display, precise percentage control, and comprehensive styling customization for different interface contexts."}),e.jsx(a.p,{className:"ladle-markdown",children:"The props for the CycleProgress component are as follows:"}),e.jsxs(a.ul,{className:"ladle-markdown",children:[`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param size - Size of the progress bar, can be 'sm' or 'md'"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param overrideSize - If size adjustments of the relative placement are required due to font changes, this value can be used to override the circle size"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param percentage - Percentage of the progress bar (0-100)"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param color - Color of the progress bar (static for the moment)"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param strokeWidthRem - Width of the progress bar. For small size, a smaller value is recommended"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param children - Content of the progress bar, displayed in the center"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param data - Optional data object that can be used for testing (e.g. data-test or data-cy)"}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param className - Optional className object allows you to override the default styling"}),`
`]})]}),`
`,`
`]})}function o(s={}){const{wrapper:a}={...t(),...s.components};return a?e.jsx(a,{...s,children:e.jsx(r,{...s})}):r(s)}o.storyName="Readme";typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{h as Colored,m as Default,o as MDXContent,u as OverrideSize,p as Small};
