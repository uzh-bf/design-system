import{j as e,r as o,u as r}from"./index-DEiNrI34.js";import"./dialog-_iLeq2ax.js";import{C as a}from"./Countdown-BiNAx8i9.js";import"./index-CHUFlN4R.js";const w=()=>{const t=new Date;return t.setSeconds(t.getSeconds()+40),e.jsx(a,{expiresAt:t})},x=()=>{const t=new Date;return t.setSeconds(t.getSeconds()+40),e.jsx(a,{expiresAt:t,isStatic:!0})},h=()=>{const t=new Date;return t.setSeconds(t.getSeconds()+40),e.jsx(a,{expiresAt:t,formatter:n=>`${n} seconds`})},f=()=>{const t=new Date;return t.setSeconds(t.getSeconds()+10),e.jsx(a,{expiresAt:t,onExpire:()=>{alert("expired")}})},j=()=>{const t=o.useMemo(()=>{const s=new Date;return s.setSeconds(s.getSeconds()+40),s},[]),[n,d]=o.useState(0);return e.jsxs("div",{children:[e.jsx(a,{expiresAt:t,onUpdate:s=>{d(s)}}),"Number through onUpdate: ",n]})},g=()=>{const t=new Date;return t.setSeconds(t.getSeconds()+40),e.jsx(a,{expiresAt:t,className:{root:"w-max bg-red-300 text-blue-500"}})};function i(t){const n={code:"code",li:"li",p:"p",ul:"ul",...r(),...t.components};return e.jsxs(e.Fragment,{children:[`
`,e.jsxs("div",{className:"prose prose-sm max-w-none",children:[e.jsxs(n.p,{className:"ladle-markdown",children:["The ",e.jsx(n.code,{className:"ladle-markdown",children:"Countdown"})," component provides a lightweight, customizable countdown timer with flexible formatting and lifecycle callbacks. It offers precise time tracking with automatic updates, custom display formatting, and event handling for expiration and update events."]}),e.jsx(n.p,{className:"ladle-markdown",children:"Use this component when you need to:"}),e.jsxs(n.ul,{className:"ladle-markdown",children:[`
`,e.jsx(n.li,{className:"ladle-markdown",children:"Display real-time countdown timers for events, deadlines, or time-sensitive actions"}),`
`,e.jsx(n.li,{className:"ladle-markdown",children:"Create static time displays showing remaining duration without automatic updates"}),`
`,e.jsx(n.li,{className:"ladle-markdown",children:"Implement custom time formatting for different display requirements (seconds, minutes, formatted strings)"}),`
`,e.jsx(n.li,{className:"ladle-markdown",children:"Track countdown updates and trigger actions on expiration events"}),`
`,e.jsx(n.li,{className:"ladle-markdown",children:"Build time-based user interfaces with minimal overhead and maximum flexibility"}),`
`]}),e.jsx(n.p,{className:"ladle-markdown",children:"The component supports automatic interval updates, custom formatting functions, expiration callbacks, update event listeners, and static display modes for testing or specific use cases."}),e.jsx(n.p,{className:"ladle-markdown",children:"The props for the Countdown component are as follows:"}),e.jsxs(n.ul,{className:"ladle-markdown",children:[`
`,e.jsx(n.li,{className:"ladle-markdown",children:"@param isStatic - If true, the countdown will not be running, but instead show the initial value. However, as the end value is given by a date, reloading can modify the displayed countdown value"}),`
`,e.jsx(n.li,{className:"ladle-markdown",children:"@param expiresAt - Date when the countdown should expire"}),`
`,e.jsx(n.li,{className:"ladle-markdown",children:"@param formatter - Function to format the countdown value"}),`
`,e.jsx(n.li,{className:"ladle-markdown",children:"@param onExpire - Function that is executed when the countdown expires"}),`
`,e.jsx(n.li,{className:"ladle-markdown",children:"@param onUpdate - Function that is executed when the countdown is updated (not when it expires)"}),`
`,e.jsx(n.li,{className:"ladle-markdown",children:"@param data - Optional data object that can be used for testing (e.g. data-test or data-cy)"}),`
`,e.jsx(n.li,{className:"ladle-markdown",children:"@param className - Optional className object allows you to override the default styling"}),`
`]})]}),`
`,`
`]})}function l(t={}){const{wrapper:n}={...r(),...t.components};return n?e.jsx(n,{...t,children:e.jsx(i,{...t})}):i(t)}l.storyName="Readme";typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{w as Default,h as Formatter,l as MDXContent,x as Static,g as Styled,j as UpdateFunction,f as onExpire};
