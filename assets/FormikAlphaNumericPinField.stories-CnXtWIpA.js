import{j as e,u as c}from"./index-DEiNrI34.js";import"./dialog-_iLeq2ax.js";import{u as N,F as r,a as i,c as y,b as T}from"./index.esm-D2HXOTrz.js";import{B as m}from"./Button-CUVWDmdD.js";import{t as F}from"./bundle-mjs-yGZq-iow.js";import{A as C}from"./AlphaNumericPinField-Cge9gs4V.js";import"./index.es-NtOi_H9O.js";import"./index-CHUFlN4R.js";import"./button-Yw5zgBtG.js";import"./index-B3aLtBOT.js";import"./index-DtEwDKTU.js";import"./utils-DWGaYqod.js";import"./index-Dx3L3kPF.js";import"./FormLabel-CBw35l8L.js";import"./Label-D6jNz1rt.js";import"./index-CmKZ1pfP.js";import"./index-C5n_-8xf.js";import"./Tooltip-CWSqVm7D.js";import"./tooltip-Bprg8iF-.js";import"./index-DW48STyt.js";import"./index-D5EOn7g6.js";import"./index-DLOI5vlP.js";import"./index-CrPSKIX0.js";import"./index-CmtLGD9I.js";import"./index-ClfrJl2J.js";import"./index-Bb64puHf.js";import"./index-5gnPcUYP.js";import"./index-CcBsoYEk.js";import"./index-CMHoVSiQ.js";import"./index-CvbEhjvG.js";import"./index-C97eV_DA.js";import"./input-otp-C6UrMFwG.js";function n({id:l,data:a,name:h,length:p,label:u,labelType:x="small",tooltip:j,required:w=!1,hideError:b=!1,uppercaseOnly:f=!1,className:t,...g}){const[v,o,s]=N(h);return e.jsx("div",{className:F("w-full",t==null?void 0:t.root),children:e.jsx(C,{id:l,data:a,value:v.value,onChange:async k=>{await s.setValue(k),await s.setTouched(!0)},length:p,label:u,labelType:x,tooltip:j,required:w,hideError:b,error:o.error&&o.touched?o.error:void 0,isTouched:o.touched,uppercaseOnly:f,className:t,...g})})}const oe=()=>e.jsx("div",{children:e.jsx(r,{initialValues:{code:""},onSubmit:async(l,{resetForm:a})=>{alert(`Form submitted with value: ${l.code}`),a()},children:({values:l})=>e.jsxs("div",{children:[e.jsxs(i,{children:[e.jsx(n,{label:"Code",name:"code",length:6}),e.jsx(m,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",l.code]})]})})}),se=()=>e.jsx("div",{children:e.jsx(r,{initialValues:{code:""},onSubmit:()=>{},children:({values:l})=>e.jsxs("div",{children:[e.jsx(i,{children:e.jsx(n,{label:"Invite",name:"code",length:6,uppercaseOnly:!0,tooltip:"Lowercase letters are converted to uppercase"})}),e.jsxs("div",{children:["Value: ",l.code]})]})})}),de=()=>e.jsx("div",{children:e.jsx(r,{initialValues:{code:""},onSubmit:()=>{},children:e.jsx(i,{children:e.jsx(n,{required:!0,label:"Required Code",name:"code",length:6})})})}),ce=()=>e.jsx("div",{children:e.jsx(r,{initialValues:{code:""},onSubmit:()=>{},children:e.jsx(i,{children:e.jsx(n,{label:"Code",name:"code",labelType:"large",length:6,required:!0,tooltip:"Use the code provided by your administrator"})})})}),me=()=>e.jsx("div",{children:e.jsx(r,{initialValues:{code:""},onSubmit:()=>{},children:e.jsx(i,{children:e.jsx(n,{label:"Code",name:"code",length:6,tooltip:"Alphanumeric only; paste is supported"})})})}),he=()=>e.jsx("div",{children:e.jsx(r,{initialValues:{code:""},onSubmit:()=>{},children:({values:l})=>e.jsxs("div",{children:[e.jsx(i,{children:e.jsx(n,{label:"Code",name:"code",length:6,className:{field:"mb-1 w-1/2",input:"bg-blue-50",label:"text-emerald-700"},data:{cy:"alpha"}})}),e.jsxs("div",{children:["Value: ",l.code]})]})})}),pe=()=>e.jsxs("div",{children:[e.jsx("div",{children:"This field must have an exact length of 6 characters and be alphanumeric."}),e.jsx(r,{initialValues:{code:""},onSubmit:()=>{},validationSchema:y().shape({code:T().required("This field is required").matches(/^[A-Za-z0-9]{6}$/g,"Must be exactly 6 alphanumeric characters")}),children:({isValid:l})=>e.jsxs(i,{children:[e.jsx(n,{required:!0,label:"Alphanumeric Code",name:"code",length:6}),e.jsx(m,{type:"submit",disabled:!l,children:"Submit"})]})})]});function d(l){const a={code:"code",li:"li",p:"p",ul:"ul",...c(),...l.components};return e.jsxs(e.Fragment,{children:[`
`,e.jsxs("div",{className:"prose prose-sm max-w-none",children:[e.jsxs(a.p,{className:"ladle-markdown",children:["The ",e.jsx(a.code,{className:"ladle-markdown",children:"FormikAlphaNumericPinField"})," component is a Formik wrapper around the ",e.jsx(a.code,{className:"ladle-markdown",children:"AlphaNumericPinField"})," component. It supports segmented input for alphanumeric codes (A–Z, 0–9), with optional automatic uppercasing, and integrates labels, tooltips, and error handling."]}),e.jsx(a.p,{className:"ladle-markdown",children:"The FormikAlphaNumericPinField accepts the following props:"}),e.jsxs(a.ul,{className:"ladle-markdown",children:[`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param id - The id of the input field."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param data - Optional data attributes for testing purposes."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param name - The name of the input field (used for Formik). Required when not using external state."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param value - The value of the field for external state management (mutually exclusive with name)."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param onChange - The change handler for external state management (mutually exclusive with name)."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param length - The length of the pin (number of characters)."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param required - Indicate whether the field is required or not."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param label - The text displayed as label."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param labelType - The optional labelType can be used to change the size and position of the label according to pre-defined standards."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param tooltip - The optional tooltip is shown on hover over the tooltip next to the label."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param hideError - Indicate whether the error message should be hidden or not."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param isTouched - External touched state when using external value/onChange."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param error - External error message when using external value/onChange."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param uppercaseOnly - If true, lowercase characters are automatically converted to uppercase."}),`
`,e.jsx(a.li,{className:"ladle-markdown",children:"@param className - The class names for the different parts of the component."}),`
`]})]}),`
`,`
`]})}function V(l={}){const{wrapper:a}={...c(),...l.components};return a?e.jsx(a,{...l,children:e.jsx(d,{...l})}):d(l)}V.storyName="Readme";typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{oe as Default,ce as LargeLabel,V as MDXContent,de as Required,he as Styled,me as Tooltip,se as UppercaseOnly,pe as Validation};
