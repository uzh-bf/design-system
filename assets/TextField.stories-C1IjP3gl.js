import{R as o,j as e,u as s}from"./index-_FYGs-BE.js";import"./dialog-O__SisCS.js";import{b as r}from"./index-D9GdmwpL.js";import{D as n}from"./index-B8qhK8lp.js";import{T as t}from"./TextField-BOgQn0cd.js";import"./index.es-B7j6yTX5.js";import"./index-DydzGmIg.js";import"./bundle-mjs-yGZq-iow.js";import"./FormLabel-6pgvMPAY.js";import"./Label-CL8piBbY.js";import"./index-XXGqeotC.js";import"./index-BIaoyP9C.js";import"./index-DW60bstT.js";import"./Tooltip-Dh9m4z7w.js";import"./tooltip-D7qQA3Lk.js";import"./index-DW48STyt.js";import"./index-Bj4Uw36c.js";import"./index-CiBylHqB.js";import"./index-KN2d_pNr.js";import"./index-D5dle9tq.js";import"./index-B7sJZULu.js";import"./index-DwiflhdG.js";import"./index-FGkBC6a9.js";import"./index-CPKVEIy9.js";import"./index-BFkcuqXI.js";import"./index-BGiqyh4j.js";import"./index-CBVpqRor.js";import"./utils-Hx8QiC2R.js";import"./input-BYTjGO1a.js";const z=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The default TextField"}),e.jsx(t,{label:"Label",tooltip:"Tooltip for this input",className:{field:"mb-1 w-80"},placeholder:"Placeholder",value:a,onChange:l})]})},A=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The default TextField"}),e.jsx(t,{label:"Label",tooltip:"Tooltip for this input",className:{field:"mb-1 w-80"},placeholder:"Placeholder",value:a,onChange:l,icon:n,onIconClick:()=>alert("Icon clicked")})]})},_=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The default TextField"}),e.jsx(t,{label:"Label",tooltip:"Tooltip for this input",className:{field:"mb-1 w-80"},placeholder:"Placeholder",value:a,onChange:l,icon:r,iconPosition:"right",onIconClick:()=>alert("Icon clicked")})]})},B=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The TextField with a small label"}),e.jsx(t,{label:"Label",labelType:"small",tooltip:"Tooltip for this input",className:{field:"mb-1"},placeholder:"Placeholder",value:a,onChange:l}),e.jsx(t,{label:"Search",labelType:"small",tooltip:"Tooltip for this input",className:{field:"mb-1"},placeholder:"Placeholder",value:a,onChange:l,icon:n}),e.jsx(t,{required:!0,label:"Label 3",labelType:"small",tooltip:"Tooltip for this input",className:{field:"mb-1"},placeholder:"Placeholder",value:a,onChange:l})]})},G=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The TextField can be disabled"}),e.jsx(t,{disabled:!0,label:"Label",tooltip:"Tooltip for this input",className:{field:"mb-1"},placeholder:"Placeholder",value:a,onChange:l})]})},O=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The TextField can be disabled"}),e.jsx(t,{isTouched:!0,label:"Label",tooltip:"Tooltip for this input",error:"This is an error message",className:{field:"mb-1"},placeholder:"Placeholder",value:a,onChange:l})]})},H=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"By adding a required attribute, the label of the field changes it appearance"}),e.jsx(t,{required:!0,label:"Label",tooltip:"Tooltip for this input",className:{field:"mb-1"},placeholder:"Placeholder",value:a,onChange:l})]})},J=()=>{const[a,l]=o.useState("");return e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The default TextField can be customized and icons from FontAwesome can be included at the beginning of the field"}),e.jsx(t,{label:"Label",tooltip:"Tooltip for this input",className:{field:"mb-1 w-1/2",label:"text-red-500",input:"bg-blue-100",error:"text-red-700"},placeholder:"Placeholder",value:a,onChange:l,icon:n})]})};function i(a){const l={li:"li",p:"p",ul:"ul",...s(),...a.components};return e.jsxs(e.Fragment,{children:[`
`,e.jsxs("div",{className:"prose prose-sm max-w-none",children:[e.jsx(l.p,{className:"ladle-markdown",children:"The TextField component is an input field that only accepts numerical values. Optionally, it is possible to define labels, units, tooltips, a rounding precision and error messages."}),e.jsx(l.p,{className:"ladle-markdown",children:"The props for the TextField component are as follows:"}),e.jsxs(l.ul,{className:"ladle-markdown",children:[`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param id - The id of the input field."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param data - The object of data attributes that can be used for testing (e.g. data-test or data-cy)"}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param name - The name of the input field."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param field - The field object from formik."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param value - The value of the input field (external state management)."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param onChange - The onChange function of the input field (external state management)."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param label - The text displayed as label."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param labelType - The optional labelType can be used to change the size and position of the label according to pre-defined standards."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param placeholder - The placeholder text for the input field."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param tooltip - The optional tooltip is shown on hover over the tooltip next to the label."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param required - Indicate whether the field is required or not."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param isTouched - Indicate whether the field has been touched or not (validation is not handled by this component)."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param hideError - Indicate whether the error message should be hidden or not."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param error - The error message that is shown below the field."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param disabled - Indicate whether the field is disabled or not."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param onPaste - The optional onPaste function is called when the user pastes text into the input field."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param className - The optional className object allows you to override the default styling."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param icon - The optional icon is shown on the right side of the input field."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param iconPosition - The optional iconPosition can be used to change the position of the icon to the left side of the input field."}),`
`,e.jsx(l.li,{className:"ladle-markdown",children:"@param onIconClick - The optional onIconClick function is called when the icon is clicked."}),`
`]})]}),`
`,`
`]})}function d(a={}){const{wrapper:l}={...s(),...a.components};return l?e.jsx(l,{...a,children:e.jsx(i,{...a})}):i(a)}d.storyName="Readme";typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{z as Default,G as Disabled,O as Error,A as Icon,_ as IconRight,d as MDXContent,H as Required,B as SmallLabel,J as Styled};
