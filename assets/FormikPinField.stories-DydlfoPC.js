import{j as e,u as w}from"./index-DEiNrI34.js";import"./dialog-_iLeq2ax.js";import{u as T,F as a,a as o,c as V,b as I}from"./index.esm-D2HXOTrz.js";import{B as d}from"./Button-CUVWDmdD.js";import{m as P}from"./index-Dx3L3kPF.js";import{F as N}from"./index.es-NtOi_H9O.js";import{t as j}from"./bundle-mjs-yGZq-iow.js";import{F as S}from"./FormLabel-CBw35l8L.js";import{T as q}from"./Tooltip-CWSqVm7D.js";import{I as $,a as D,b as C}from"./input-otp-C6UrMFwG.js";import"./button-Yw5zgBtG.js";import"./index-B3aLtBOT.js";import"./index-DtEwDKTU.js";import"./utils-DWGaYqod.js";import"./index-CHUFlN4R.js";import"./Label-D6jNz1rt.js";import"./index-CmKZ1pfP.js";import"./index-C5n_-8xf.js";import"./tooltip-Bprg8iF-.js";import"./index-DW48STyt.js";import"./index-D5EOn7g6.js";import"./index-DLOI5vlP.js";import"./index-CrPSKIX0.js";import"./index-CmtLGD9I.js";import"./index-ClfrJl2J.js";import"./index-Bb64puHf.js";import"./index-5gnPcUYP.js";import"./index-CcBsoYEk.js";import"./index-CMHoVSiQ.js";import"./index-CvbEhjvG.js";import"./index-C97eV_DA.js";function m({id:t,name:i,length:h,required:v=!1,label:u,labelType:x="small",tooltip:g,hideError:y=!1,className:r,data:s}){const[k,n,p]=T(i);return e.jsxs("div",{className:j("flex w-full flex-row",x==="small"&&"flex-col",r==null?void 0:r.field),children:[u&&e.jsx(S,{id:t,required:v,label:u,labelType:x,tooltip:g,className:{label:r==null?void 0:r.label,tooltip:r==null?void 0:r.tooltip}}),e.jsxs("div",{className:"flex w-full flex-row items-center gap-2",children:[e.jsx($,{maxLength:h,value:k.value,onChange:async c=>{const l=c.replace(/\s+/g,"").replace(/[^0-9]/g,"").slice(0,h);await p.setValue(l),await p.setTouched(!0)},onPaste:async c=>{var f;const l=(f=c.clipboardData)==null?void 0:f.getData("text");if(l){c.preventDefault();const F=l.replace(/\s+/g,"").replace(/[^0-9]/g,"").slice(0,h);await p.setValue(F),await p.setTouched(!0)}},className:r==null?void 0:r.input,children:e.jsxs(D,{children:[...Array(h).fill("").map((c,l)=>e.jsx(C,{index:l,"data-cy":`${s==null?void 0:s.cy}-${l+1}`,"data-test":`${s==null?void 0:s.test}-${l+1}`,className:j("h-9 text-base",!!n.error&&n.touched&&"border-destructive bg-destructive-background border-y",r==null?void 0:r.inputItem)}))]})}),n.error&&!y&&n.touched&&e.jsx(q,{tooltip:n.error&&n.touched?n.error:void 0,delay:0,className:{tooltip:"max-w-120 text-sm"},children:e.jsx(N,{icon:P,className:"text-destructive mr-1"})})]})]})}const pe=()=>e.jsxs("div",{children:[e.jsx("div",{children:'The default 9-digit Formik pin field works with a "name" input and no other requirements. Form validation has to be done manually with a separate schema. The state is kept as a string including the whitespaces (see "value" below).'}),e.jsx(a,{initialValues:{pin:""},isInitialValid:!1,onSubmit:async(t,{resetForm:i})=>{alert(`Form submitted with value: ${t.pin}`),i()},children:({values:t})=>e.jsxs("div",{children:[e.jsxs(o,{children:[e.jsx(m,{name:"pin",length:9,className:{field:"my-2"}}),e.jsx(d,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.pin]})]})}),e.jsx("div",{children:'Values can be pasted into the field using either the format including spaces "123 456 789" or without "123456789"'})]}),ue=()=>e.jsxs("div",{children:[e.jsx("div",{children:'As most other formik fields as well, this form can be marked to be required with the "required" prop. The corresponding sign is shown next to the label.'}),e.jsx(a,{initialValues:{pin:""},isInitialValid:!1,onSubmit:async(t,{resetForm:i})=>{alert(`Form submitted with value: ${t.pin}`),i()},children:({values:t})=>e.jsxs("div",{children:[e.jsxs(o,{children:[e.jsx(m,{required:!0,label:"PIN",name:"pin",length:9,className:{field:"my-2"}}),e.jsx(d,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.pin]})]})})]}),xe=()=>e.jsx("div",{children:e.jsx(a,{initialValues:{pin:""},isInitialValid:!1,onSubmit:async(t,{resetForm:i})=>{alert(`Form submitted with value: ${t.pin}`),i()},children:({values:t})=>e.jsxs("div",{children:[e.jsxs(o,{children:[e.jsx(m,{required:!0,labelType:"large",tooltip:"Tooltip for this input",label:"PIN",name:"pin",length:9,className:{field:"my-2"}}),e.jsx(d,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.pin]})]})})}),fe=()=>e.jsxs("div",{children:[e.jsx("div",{children:"As most other formik components as well, the label can be accompanied by a tooltip with corresponding symbol."}),e.jsx(a,{initialValues:{pin:""},isInitialValid:!1,onSubmit:async(t,{resetForm:i})=>{alert(`Form submitted with value: ${t.pin}`),i()},children:({values:t})=>e.jsxs("div",{children:[e.jsxs(o,{children:[e.jsx(m,{required:!0,label:"PIN",tooltip:"Tooltip for this input",name:"pin",length:9,className:{field:"my-2"}}),e.jsx(d,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.pin]})]})})]}),je=()=>e.jsxs("div",{children:[e.jsx("div",{children:"Custom styling can be applied through the className prop and testing is facilitated through data-props."}),e.jsx(a,{initialValues:{pin:""},isInitialValid:!1,onSubmit:async(t,{resetForm:i})=>{alert(`Form submitted with value: ${t.pin}`),i()},children:({values:t})=>e.jsxs("div",{children:[e.jsxs(o,{children:[e.jsx(m,{required:!0,label:"PIN",name:"pin",length:9,className:{field:"mb-1 w-1/2",input:"bg-red-200",label:"text-blue-500"},data:{cy:"test"}}),e.jsx(d,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.pin]})]})})]}),be=()=>e.jsxs("div",{children:[e.jsx("div",{children:"This PIN field should have an exact length of 9 characters or will display an error after being touched otherwise."}),e.jsx(a,{initialValues:{pin:""},isInitialValid:!1,onSubmit:async(t,{resetForm:i})=>{alert(`Form submitted with value: ${t.pin}`),i()},validationSchema:V().shape({pin:I().required("This field is required").min(9,"Please ensure that the entire PIN is entered").max(9,"Please ensure that the entire PIN is entered")}),children:({values:t,isValid:i})=>e.jsxs("div",{children:[e.jsxs(o,{children:[e.jsx(m,{required:!0,label:"PIN",name:"pin",length:9,className:{field:"my-2"}}),e.jsx(d,{type:"submit",disabled:!i,children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.pin]}),e.jsxs("div",{children:["Valid?: ",String(i)]})]})})]});function b(t){const i={code:"code",li:"li",p:"p",ul:"ul",...w(),...t.components};return e.jsxs(e.Fragment,{children:[`
`,e.jsxs("div",{className:"prose prose-sm max-w-none",children:[e.jsxs(i.p,{className:"ladle-markdown",children:["The ",e.jsx(i.code,{className:"ladle-markdown",children:"FormikPinField"})," component is a Formik wrapper around the ",e.jsx(i.code,{className:"ladle-markdown",children:"PinField"})," component. In addition to labels, tooltips, etc. it also offers direct interfaces for form validation, error messages, and form submission handling."]}),e.jsx(i.p,{className:"ladle-markdown",children:"The FormikPinField accepts the following props:"}),e.jsxs(i.ul,{className:"ladle-markdown",children:[`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param id - The id of the input field."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param name - The name of the input field (used for Formik)."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param length - The length of the pin (number of digits)."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param required - Indicate whether the field is required or not."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param label - The text displayed as label."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param labelType - The optional labelType can be used to change the size and position of the label according to pre-defined standards."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param tooltip - The optional tooltip is shown on hover over the tooltip next to the label."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param hideError - Indicate whether the error message should be hidden or not."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param className - The class names for the different parts of the component."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param data - Optional data attributes for testing purposes."}),`
`]})]}),`
`,`
`]})}function A(t={}){const{wrapper:i}={...w(),...t.components};return i?e.jsx(i,{...t,children:e.jsx(b,{...t})}):b(t)}A.storyName="Readme";typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{pe as Default,xe as LargeLabel,A as MDXContent,ue as Required,je as Styled,fe as Tooltip,be as Validation};
