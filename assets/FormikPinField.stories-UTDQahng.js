import{j as e,u as b}from"./index-CVqru2be.js";import"./dialog-C-71x_tT.js";import{u as k,F as s,a,c as F,b as T}from"./index.esm-DuN5mjul.js";import{B as o}from"./Button-D69mCAFX.js";import{m as I}from"./index-B8qhK8lp.js";import{F as V}from"./index.es-r8SpnGQq.js";import{t as j}from"./bundle-mjs-yGZq-iow.js";import{F as P}from"./FormLabel-3wU2HsfZ.js";import{T as N}from"./Tooltip-GxaUh4t_.js";import{I as S,a as q,b as $}from"./input-otp-CBo-3gUF.js";import"./button-CfRsFPkW.js";import"./index-b6IP3858.js";import"./index--tXxNNaN.js";import"./utils-CsPM183f.js";import"./index-Bf71MGUz.js";import"./Label-BDpkrmIq.js";import"./index-Bs3UcjNi.js";import"./index-Bsaof1VL.js";import"./tooltip-DlPCAQk5.js";import"./index-DW48STyt.js";import"./index-BqYQhx-7.js";import"./index-DwL8hC5E.js";import"./index-DyQ19Ywc.js";import"./index-D9pGdYfW.js";import"./index-CgUDnRm9.js";import"./index-BVA4MbeI.js";import"./index-B5tq6NWd.js";import"./index-IrVXhrCN.js";import"./index-Gu6FmL9O.js";import"./index-BOu551n7.js";import"./index-DL96U-9T.js";function d({id:t,name:i,length:h,required:w=!1,label:c,labelType:p="small",tooltip:v,hideError:g=!1,className:r,data:l}){const[y,n,u]=k(i);return e.jsxs("div",{className:j("flex w-full flex-row",p==="small"&&"flex-col",r==null?void 0:r.field),children:[c&&e.jsx(P,{id:t,required:w,label:c,labelType:p,tooltip:v,className:{label:r==null?void 0:r.label,tooltip:r==null?void 0:r.tooltip}}),e.jsxs("div",{className:"flex w-full flex-row items-center gap-2",children:[e.jsx(S,{maxLength:h,value:y.value,onChange:async x=>{await u.setValue(x),await u.setTouched(!0)},className:r==null?void 0:r.input,children:e.jsxs(q,{children:[...Array(h).fill("").map((x,m)=>e.jsx($,{index:m,"data-cy":`${l==null?void 0:l.cy}-${m+1}`,"data-test":`${l==null?void 0:l.test}-${m+1}`,className:j("h-9 text-base",!!n.error&&n.touched&&"border-destructive bg-destructive-background border-y",r==null?void 0:r.inputItem)}))]})}),n.error&&!g&&n.touched&&e.jsx(N,{tooltip:n.error&&n.touched?n.error:void 0,delay:0,className:{tooltip:"max-w-120 text-sm"},children:e.jsx(V,{icon:I,className:"text-destructive mr-1"})})]})]})}const he=()=>e.jsxs("div",{children:[e.jsx("div",{children:'The default 9-digit Formik pin field works with a "name" input and no other requirements. Form validation has to be done manually with a separate schema. The state is kept as a string including the whitespaces (see "value" below).'}),e.jsx(s,{initialValues:{pin:""},isInitialValid:!1,onSubmit:async(t,{resetForm:i})=>{alert(`Form submitted with value: ${t.pin}`),i()},children:({values:t})=>e.jsxs("div",{children:[e.jsxs(a,{children:[e.jsx(d,{name:"pin",length:9,className:{field:"my-2"}}),e.jsx(o,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.pin]})]})}),e.jsx("div",{children:'Values can be pasted into the field using either the format including spaces "123 456 789" or without "123456789"'})]}),ce=()=>e.jsxs("div",{children:[e.jsx("div",{children:'As most other formik fields as well, this form can be marked to be required with the "required" prop. The corresponding sign is shown next to the label.'}),e.jsx(s,{initialValues:{pin:""},isInitialValid:!1,onSubmit:async(t,{resetForm:i})=>{alert(`Form submitted with value: ${t.pin}`),i()},children:({values:t})=>e.jsxs("div",{children:[e.jsxs(a,{children:[e.jsx(d,{required:!0,label:"PIN",name:"pin",length:9,className:{field:"my-2"}}),e.jsx(o,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.pin]})]})})]}),pe=()=>e.jsx("div",{children:e.jsx(s,{initialValues:{pin:""},isInitialValid:!1,onSubmit:async(t,{resetForm:i})=>{alert(`Form submitted with value: ${t.pin}`),i()},children:({values:t})=>e.jsxs("div",{children:[e.jsxs(a,{children:[e.jsx(d,{required:!0,labelType:"large",tooltip:"Tooltip for this input",label:"PIN",name:"pin",length:9,className:{field:"my-2"}}),e.jsx(o,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.pin]})]})})}),ue=()=>e.jsxs("div",{children:[e.jsx("div",{children:"As most other formik components as well, the label can be accompanied by a tooltip with corresponding symbol."}),e.jsx(s,{initialValues:{pin:""},isInitialValid:!1,onSubmit:async(t,{resetForm:i})=>{alert(`Form submitted with value: ${t.pin}`),i()},children:({values:t})=>e.jsxs("div",{children:[e.jsxs(a,{children:[e.jsx(d,{required:!0,label:"PIN",tooltip:"Tooltip for this input",name:"pin",length:9,className:{field:"my-2"}}),e.jsx(o,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.pin]})]})})]}),xe=()=>e.jsxs("div",{children:[e.jsx("div",{children:"Custom styling can be applied through the className prop and testing is facilitated through data-props."}),e.jsx(s,{initialValues:{pin:""},isInitialValid:!1,onSubmit:async(t,{resetForm:i})=>{alert(`Form submitted with value: ${t.pin}`),i()},children:({values:t})=>e.jsxs("div",{children:[e.jsxs(a,{children:[e.jsx(d,{required:!0,label:"PIN",name:"pin",length:9,className:{field:"mb-1 w-1/2",input:"bg-red-200",label:"text-blue-500"},data:{cy:"test"}}),e.jsx(o,{type:"submit",children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.pin]})]})})]}),je=()=>e.jsxs("div",{children:[e.jsx("div",{children:"This PIN field should have an exact length of 9 characters or will display an error after being touched otherwise."}),e.jsx(s,{initialValues:{pin:""},isInitialValid:!1,onSubmit:async(t,{resetForm:i})=>{alert(`Form submitted with value: ${t.pin}`),i()},validationSchema:F().shape({pin:T().required("This field is required").min(9,"Please ensure that the entire PIN is entered").max(9,"Please ensure that the entire PIN is entered")}),children:({values:t,isValid:i})=>e.jsxs("div",{children:[e.jsxs(a,{children:[e.jsx(d,{required:!0,label:"PIN",name:"pin",length:9,className:{field:"my-2"}}),e.jsx(o,{type:"submit",disabled:!i,children:"Submit"})]}),e.jsxs("div",{children:["Value: ",t.pin]}),e.jsxs("div",{children:["Valid?: ",String(i)]})]})})]});function f(t){const i={code:"code",li:"li",p:"p",ul:"ul",...b(),...t.components};return e.jsxs(e.Fragment,{children:[`
`,e.jsxs("div",{className:"prose prose-sm max-w-none",children:[e.jsxs(i.p,{className:"ladle-markdown",children:["The ",e.jsx(i.code,{className:"ladle-markdown",children:"FormikPinField"})," component is a Formik wrapper around the ",e.jsx(i.code,{className:"ladle-markdown",children:"PinField"})," component. In addition to labels, tooltips, etc. it also offers direct interfaces for form validation, error messages, and form submission handling."]}),e.jsx(i.p,{className:"ladle-markdown",children:"The FormikPinField accepts the following props:"}),e.jsxs(i.ul,{className:"ladle-markdown",children:[`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param id - The id of the input field."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param name - The name of the input field (used for Formik)."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param length - The length of the pin (number of digits)."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param required - Indicate whether the field is required or not."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param label - The text displayed as label."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param labelType - The optional labelType can be used to change the size and position of the label according to pre-defined standards."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param tooltip - The optional tooltip is shown on hover over the tooltip next to the label."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param hideError - Indicate whether the error message should be hidden or not."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param className - The class names for the different parts of the component."}),`
`,e.jsx(i.li,{className:"ladle-markdown",children:"@param data - Optional data attributes for testing purposes."}),`
`]})]}),`
`,`
`]})}function C(t={}){const{wrapper:i}={...b(),...t.components};return i?e.jsx(i,{...t,children:e.jsx(f,{...t})}):f(t)}C.storyName="Readme";typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{he as Default,pe as LargeLabel,C as MDXContent,ce as Required,xe as Styled,ue as Tooltip,je as Validation};
